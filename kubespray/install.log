
PLAY [Reset Kubernetes] ********************************************************
Sunday 19 October 2025  22:11:59 +0300 (0:00:00.056)       0:00:00.056 ******** 

TASK [Stop kubelet] ************************************************************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:12:02 +0300 (0:00:02.781)       0:00:02.838 ******** 

TASK [Reset kubeadm] ***********************************************************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:12:03 +0300 (0:00:01.361)       0:00:04.199 ******** 

TASK [Remove Kubernetes dirs] **************************************************
ok: [worker2] => (item=/etc/kubernetes)
ok: [master] => (item=/etc/kubernetes)
changed: [master] => (item=/var/lib/etcd)
ok: [worker1] => (item=/etc/kubernetes)
ok: [worker2] => (item=/var/lib/etcd)
ok: [master] => (item=/var/lib/kubelet)
ok: [worker2] => (item=/var/lib/kubelet)
ok: [worker2] => (item=/var/lib/cni)
ok: [master] => (item=/var/lib/cni)
ok: [worker1] => (item=/var/lib/etcd)
ok: [master] => (item=/run/kubernetes)
ok: [worker2] => (item=/run/kubernetes)
ok: [worker1] => (item=/var/lib/kubelet)
ok: [worker1] => (item=/var/lib/cni)
ok: [worker1] => (item=/run/kubernetes)
Sunday 19 October 2025  22:12:07 +0300 (0:00:03.826)       0:00:08.026 ******** 

TASK [Swapoff] *****************************************************************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:12:08 +0300 (0:00:00.729)       0:00:08.755 ******** 

TASK [Correct /etc/fstab] ******************************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:09 +0300 (0:00:00.792)       0:00:09.548 ******** 

TASK [Ensure kubelet started] **************************************************
changed: [worker2]
changed: [master]
changed: [worker1]

PLAY RECAP *********************************************************************
master                     : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker1                    : ok=6    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker2                    : ok=6    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Sunday 19 October 2025  22:12:11 +0300 (0:00:02.124)       0:00:11.672 ******** 
=============================================================================== 
Remove Kubernetes dirs -------------------------------------------------- 3.83s
Stop kubelet ------------------------------------------------------------ 2.78s
Ensure kubelet started -------------------------------------------------- 2.12s
Reset kubeadm ----------------------------------------------------------- 1.36s
Correct /etc/fstab ------------------------------------------------------ 0.79s
Swapoff ----------------------------------------------------------------- 0.73s

PLAY [Add SSH key to remote hosts] *********************************************
Sunday 19 October 2025  22:12:12 +0300 (0:00:00.052)       0:00:00.052 ******** 

TASK [Ensure SSH key is present in authorized_keys] ****************************
ok: [worker2]
ok: [master]
ok: [worker1]

PLAY RECAP *********************************************************************
master                     : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker1                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker2                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Sunday 19 October 2025  22:12:13 +0300 (0:00:01.030)       0:00:01.083 ******** 
=============================================================================== 
Ensure SSH key is present in authorized_keys ---------------------------- 1.03s

PLAY [Install Kubernetes tools (kubeadm, kubelet, kubectl)] ********************
Sunday 19 October 2025  22:12:13 +0300 (0:00:00.057)       0:00:00.057 ******** 

TASK [Update apt cache] ********************************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:15 +0300 (0:00:02.026)       0:00:02.084 ******** 

TASK [Install required packages] ***********************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:18 +0300 (0:00:02.975)       0:00:05.060 ******** 

TASK [Add Kubernetes apt GPG key] **********************************************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:12:20 +0300 (0:00:01.395)       0:00:06.455 ******** 

TASK [Add Kubernetes apt repository] *******************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:21 +0300 (0:00:01.701)       0:00:08.157 ******** 

TASK [Install kubelet, kubeadm and kubectl] ************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:28 +0300 (0:00:06.973)       0:00:15.130 ******** 

TASK [Hold kubelet kubeadm kubectl versions] ***********************************
changed: [worker2]
changed: [master]
changed: [worker1]

PLAY RECAP *********************************************************************
master                     : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker1                    : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
worker2                    : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Sunday 19 October 2025  22:12:29 +0300 (0:00:00.680)       0:00:15.811 ******** 
=============================================================================== 
Install kubelet, kubeadm and kubectl ------------------------------------ 6.97s
Install required packages ----------------------------------------------- 2.98s
Update apt cache -------------------------------------------------------- 2.03s
Add Kubernetes apt repository ------------------------------------------- 1.70s
Add Kubernetes apt GPG key ---------------------------------------------- 1.40s
Hold kubelet kubeadm kubectl versions ----------------------------------- 0.68s

PLAY [Check Ansible version] ***************************************************
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.104)       0:00:00.104 ******** 

TASK [Check 2.17.3 <= Ansible version < 2.18.0] ********************************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.048)       0:00:00.152 ******** 

TASK [Check that python netaddr is installed] **********************************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.086)       0:00:00.239 ******** 

TASK [Check that jinja is not too old (install via pip)] ***********************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}

PLAY [Inventory setup and validation] ******************************************
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.052)       0:00:00.291 ******** 

TASK [dynamic_groups : Match needed groups by their old names or definition] ***
ok: [master] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
ok: [worker1] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
ok: [worker2] => (item={'key': 'k8s_cluster', 'value': ['kube_node', 'kube_control_plane', 'calico_rr']})
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.221)       0:00:00.512 ******** 

TASK [validate_inventory : Stop if removed tags are used] **********************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.106)       0:00:00.619 ******** 

TASK [validate_inventory : Stop if kube_control_plane group is empty] **********
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.040)       0:00:00.660 ******** 

TASK [validate_inventory : Stop if etcd group is empty in external etcd mode] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:32 +0300 (0:00:00.039)       0:00:00.700 ******** 
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.192)       0:00:00.892 ******** 

TASK [validate_inventory : Stop if unsupported version of Kubernetes] **********
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.115)       0:00:01.008 ******** 

TASK [validate_inventory : Stop if known booleans are set as strings (Use JSON format on CLI: -e "{'key': true }")] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.052)       0:00:01.061 ******** 

TASK [validate_inventory : Stop if even number of etcd hosts] ******************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.052)       0:00:01.113 ******** 
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.088)       0:00:01.201 ******** 
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.083)       0:00:01.285 ******** 
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.082)       0:00:01.368 ******** 
Sunday 19 October 2025  22:12:33 +0300 (0:00:00.084)       0:00:01.452 ******** 

TASK [validate_inventory : Check that kube_service_addresses is a network range] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.321)       0:00:01.774 ******** 

TASK [validate_inventory : Check that kube_pods_subnet is a network range] *****
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.091)       0:00:01.865 ******** 

TASK [validate_inventory : Check that kube_pods_subnet does not collide with kube_service_addresses] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.105)       0:00:01.970 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.039)       0:00:02.010 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.049)       0:00:02.060 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.045)       0:00:02.105 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.045)       0:00:02.151 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.045)       0:00:02.197 ******** 

TASK [validate_inventory : Stop if unsupported options selected] ***************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.047)       0:00:02.245 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.093)       0:00:02.339 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.083)       0:00:02.422 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.086)       0:00:02.509 ******** 
Sunday 19 October 2025  22:12:34 +0300 (0:00:00.201)       0:00:02.710 ******** 

TASK [validate_inventory : Ensure minimum containerd version] ******************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:12:35 +0300 (0:00:00.061)       0:00:02.771 ******** 
[WARNING]: Could not match supplied host pattern, ignoring: bastion

PLAY [Install bastion ssh config] **********************************************
skipping: no hosts matched

PLAY [Bootstrap hosts for Ansible] *********************************************
Sunday 19 October 2025  22:12:35 +0300 (0:00:00.188)       0:00:02.960 ******** 
[WARNING]: raw module does not support the environment keyword

TASK [bootstrap_os : Fetch /etc/os-release] ************************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:35 +0300 (0:00:00.385)       0:00:03.345 ******** 
Sunday 19 October 2025  22:12:35 +0300 (0:00:00.129)       0:00:03.474 ******** 

TASK [bootstrap_os : Include tasks] ********************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/bootstrap_os/tasks/ubuntu.yml for master, worker1, worker2 => (item=/home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/bootstrap_os/tasks/ubuntu.yml)
Sunday 19 October 2025  22:12:36 +0300 (0:00:00.325)       0:00:03.800 ******** 

TASK [bootstrap_os : Check if bootstrap is needed] *****************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:36 +0300 (0:00:00.159)       0:00:03.960 ******** 

TASK [bootstrap_os : Check http::proxy in apt configuration files] *************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:36 +0300 (0:00:00.176)       0:00:04.137 ******** 
Sunday 19 October 2025  22:12:36 +0300 (0:00:00.088)       0:00:04.225 ******** 

TASK [bootstrap_os : Check https::proxy in apt configuration files] ************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.632)       0:00:04.858 ******** 
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.203)       0:00:05.062 ******** 
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.088)       0:00:05.150 ******** 
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.086)       0:00:05.237 ******** 
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.086)       0:00:05.324 ******** 
Sunday 19 October 2025  22:12:37 +0300 (0:00:00.085)       0:00:05.409 ******** 

TASK [system_packages : Gather OS information] *********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:39 +0300 (0:00:01.602)       0:00:07.012 ******** 
Sunday 19 October 2025  22:12:39 +0300 (0:00:00.085)       0:00:07.097 ******** 
Sunday 19 October 2025  22:12:39 +0300 (0:00:00.204)       0:00:07.302 ******** 
Sunday 19 October 2025  22:12:39 +0300 (0:00:00.091)       0:00:07.393 ******** 

TASK [system_packages : Manage packages] ***************************************
ok: [master] => (item=remove)
ok: [worker2] => (item=remove)
ok: [worker1] => (item=remove)
ok: [worker2] => (item=install)
ok: [master] => (item=install)
ok: [worker1] => (item=install)
Sunday 19 October 2025  22:12:44 +0300 (0:00:05.276)       0:00:12.670 ******** 

TASK [bootstrap_os : Create remote_tmp for it is used by another module] *******
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:45 +0300 (0:00:01.010)       0:00:13.681 ******** 

TASK [bootstrap_os : Gather facts] *********************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:47 +0300 (0:00:01.820)       0:00:15.501 ******** 

TASK [bootstrap_os : Assign inventory name to unconfigured hostnames (non-CoreOS, non-Flatcar, Suse and ClearLinux, non-Fedora)] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:49 +0300 (0:00:01.627)       0:00:17.128 ******** 

TASK [bootstrap_os : Ensure bash_completion.d folder exists] *******************
ok: [master]
ok: [worker2]
ok: [worker1]

PLAY [Gather facts] ************************************************************
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.942)       0:00:18.071 ******** 
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.091)       0:00:18.162 ******** 

TASK [network_facts : Set fallback_ip] *****************************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.108)       0:00:18.270 ******** 
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.097)       0:00:18.368 ******** 

TASK [network_facts : Set fallback_ip6] ****************************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.113)       0:00:18.481 ******** 

TASK [network_facts : Set main access ip(access_ip based on ipv4_stack/ipv6_stack options).] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:50 +0300 (0:00:00.259)       0:00:18.740 ******** 

TASK [network_facts : Set main ip(ip based on ipv4_stack/ipv6_stack options).] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:51 +0300 (0:00:00.111)       0:00:18.852 ******** 

TASK [network_facts : Set main access ips(mixed ips for dualstack).] ***********
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:51 +0300 (0:00:00.112)       0:00:18.964 ******** 

TASK [network_facts : Set main ips(mixed ips for dualstack).] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:12:51 +0300 (0:00:00.110)       0:00:19.075 ******** 
Sunday 19 October 2025  22:12:51 +0300 (0:00:00.043)       0:00:19.119 ******** 
Sunday 19 October 2025  22:12:51 +0300 (0:00:00.135)       0:00:19.254 ******** 

TASK [Gather minimal facts] ****************************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:12:52 +0300 (0:00:01.384)       0:00:20.639 ******** 

TASK [Gather necessary facts (network)] ****************************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:12:54 +0300 (0:00:01.773)       0:00:22.412 ******** 

TASK [Gather necessary facts (hardware)] ***************************************
ok: [worker2]
ok: [master]
ok: [worker1]

PLAY [Pre-clean cluster state] *************************************************
Sunday 19 October 2025  22:12:56 +0300 (0:00:02.013)       0:00:24.426 ******** 

TASK [Stop kubelet if running] *************************************************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:12:57 +0300 (0:00:01.105)       0:00:25.531 ******** 

TASK [Stop containerd if running] **********************************************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:12:58 +0300 (0:00:01.113)       0:00:26.645 ******** 

TASK [Kill hanging processes on API ports] *************************************
changed: [worker2]
changed: [worker1]
changed: [master]
Sunday 19 October 2025  22:12:59 +0300 (0:00:00.921)       0:00:27.566 ******** 

TASK [Remove old kube manifests and etcd] **************************************
ok: [master] => (item=/etc/kubernetes)
ok: [worker2] => (item=/etc/kubernetes)
ok: [worker2] => (item=/var/lib/etcd)
changed: [master] => (item=/var/lib/etcd)
ok: [worker1] => (item=/etc/kubernetes)
ok: [worker2] => (item=/var/lib/kubelet)
ok: [master] => (item=/var/lib/kubelet)
ok: [master] => (item=/var/lib/cni)
ok: [worker1] => (item=/var/lib/etcd)
ok: [worker2] => (item=/var/lib/cni)
ok: [master] => (item=/run/kubernetes)
ok: [worker2] => (item=/run/kubernetes)
ok: [worker1] => (item=/var/lib/kubelet)
ok: [worker1] => (item=/var/lib/cni)
ok: [worker1] => (item=/run/kubernetes)

PLAY [Prepare for etcd install] ************************************************
Sunday 19 October 2025  22:13:03 +0300 (0:00:03.415)       0:00:30.982 ******** 

TASK [adduser : User | Create User Group] **************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:04 +0300 (0:00:00.841)       0:00:31.824 ******** 

TASK [adduser : User | Create User] ********************************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:05 +0300 (0:00:00.979)       0:00:32.803 ******** 

TASK [kubernetes/preinstall : Check if /etc/fstab exists] **********************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:05 +0300 (0:00:00.746)       0:00:33.549 ******** 

TASK [kubernetes/preinstall : Remove swapfile from /etc/fstab] *****************
ok: [worker2] => (item=swap)
ok: [master] => (item=swap)
ok: [worker2] => (item=none)
ok: [master] => (item=none)
ok: [worker1] => (item=swap)
ok: [worker1] => (item=none)
Sunday 19 October 2025  22:13:07 +0300 (0:00:01.561)       0:00:35.111 ******** 

TASK [kubernetes/preinstall : Mask swap.target (persist swapoff)] **************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:08 +0300 (0:00:01.373)       0:00:36.484 ******** 

TASK [kubernetes/preinstall : Disable swap] ************************************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:13:09 +0300 (0:00:00.854)       0:00:37.338 ******** 
Sunday 19 October 2025  22:13:09 +0300 (0:00:00.094)       0:00:37.433 ******** 

TASK [kubernetes/preinstall : Check resolvconf] ********************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:10 +0300 (0:00:00.681)       0:00:38.114 ******** 

TASK [kubernetes/preinstall : Check existence of /etc/resolvconf/resolv.conf.d] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:11 +0300 (0:00:00.845)       0:00:38.960 ******** 

TASK [kubernetes/preinstall : Check status of /etc/resolv.conf] ****************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:11 +0300 (0:00:00.666)       0:00:39.626 ******** 

TASK [kubernetes/preinstall : Fetch resolv.conf] *******************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:12 +0300 (0:00:00.751)       0:00:40.378 ******** 

TASK [kubernetes/preinstall : NetworkManager | Check if host has NetworkManager] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:13 +0300 (0:00:00.642)       0:00:41.021 ******** 

TASK [kubernetes/preinstall : Check systemd-resolved] **************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:14 +0300 (0:00:00.740)       0:00:41.761 ******** 

TASK [kubernetes/preinstall : Set default dns if remove_default_searchdomains is false] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:14 +0300 (0:00:00.119)       0:00:41.881 ******** 

TASK [kubernetes/preinstall : Set dns facts] ***********************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:14 +0300 (0:00:00.118)       0:00:42.000 ******** 

TASK [kubernetes/preinstall : Check if kubelet is configured] ******************
ok: [worker2]
ok: [worker1]
ok: [master]
Sunday 19 October 2025  22:13:14 +0300 (0:00:00.537)       0:00:42.537 ******** 

TASK [kubernetes/preinstall : Check if early DNS configuration stage] **********
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:14 +0300 (0:00:00.112)       0:00:42.650 ******** 

TASK [kubernetes/preinstall : Target resolv.conf files] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:15 +0300 (0:00:00.115)       0:00:42.766 ******** 
Sunday 19 October 2025  22:13:15 +0300 (0:00:00.090)       0:00:42.856 ******** 

TASK [kubernetes/preinstall : Check if /etc/dhclient.conf exists] **************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:15 +0300 (0:00:00.886)       0:00:43.742 ******** 
Sunday 19 October 2025  22:13:16 +0300 (0:00:00.090)       0:00:43.833 ******** 

TASK [kubernetes/preinstall : Check if /etc/dhcp/dhclient.conf exists] *********
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:16 +0300 (0:00:00.680)       0:00:44.514 ******** 

TASK [kubernetes/preinstall : Target dhclient conf file for /etc/dhcp/dhclient.conf] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:16 +0300 (0:00:00.114)       0:00:44.628 ******** 
Sunday 19 October 2025  22:13:16 +0300 (0:00:00.095)       0:00:44.724 ******** 

TASK [kubernetes/preinstall : Target dhclient hook file for Debian family] *****
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:17 +0300 (0:00:00.117)       0:00:44.842 ******** 
Sunday 19 October 2025  22:13:17 +0300 (0:00:00.091)       0:00:44.934 ******** 

TASK [kubernetes/preinstall : Check /usr readonly] *****************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:17 +0300 (0:00:00.728)       0:00:45.662 ******** 
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.094)       0:00:45.757 ******** 
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.046)       0:00:45.803 ******** 

TASK [kubernetes/preinstall : Stop if non systemd OS type] *********************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.121)       0:00:45.925 ******** 

TASK [kubernetes/preinstall : Stop if the os does not support] *****************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.126)       0:00:46.051 ******** 

TASK [kubernetes/preinstall : Stop if memory is too small for control plane nodes] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.097)       0:00:46.149 ******** 

TASK [kubernetes/preinstall : Stop if memory is too small for nodes] ***********
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:18 +0300 (0:00:00.116)       0:00:46.265 ******** 

TASK [kubernetes/preinstall : Stop if cgroups are not enabled on nodes] ********
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:19 +0300 (0:00:00.531)       0:00:46.797 ******** 

TASK [kubernetes/preinstall : Stop if ip var does not match local ips] *********
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:19 +0300 (0:00:00.272)       0:00:47.069 ******** 

TASK [kubernetes/preinstall : Stop if access_ip is not pingable] ***************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:19 +0300 (0:00:00.572)       0:00:47.642 ******** 
Sunday 19 October 2025  22:13:19 +0300 (0:00:00.096)       0:00:47.738 ******** 
Sunday 19 October 2025  22:13:20 +0300 (0:00:00.089)       0:00:47.828 ******** 

TASK [kubernetes/preinstall : Stop if bad hostname] ****************************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:20 +0300 (0:00:00.120)       0:00:47.949 ******** 

TASK [kubernetes/preinstall : Stop if /etc/resolv.conf has no configured nameservers] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker1] => {
    "changed": false,
    "msg": "All assertions passed"
}
ok: [worker2] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:20 +0300 (0:00:00.168)       0:00:48.117 ******** 
Sunday 19 October 2025  22:13:20 +0300 (0:00:00.093)       0:00:48.211 ******** 

TASK [kubernetes/preinstall : Create kubernetes directories] *******************
changed: [master] => (item=/etc/kubernetes)
changed: [worker2] => (item=/etc/kubernetes)
changed: [master] => (item=/etc/kubernetes/manifests)
changed: [worker1] => (item=/etc/kubernetes)
changed: [worker2] => (item=/etc/kubernetes/manifests)
ok: [master] => (item=/usr/local/bin/kubernetes-scripts)
ok: [worker2] => (item=/usr/local/bin/kubernetes-scripts)
ok: [worker2] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
changed: [worker1] => (item=/etc/kubernetes/manifests)
ok: [master] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
ok: [worker1] => (item=/usr/local/bin/kubernetes-scripts)
ok: [worker1] => (item=/usr/libexec/kubernetes/kubelet-plugins/volume/exec)
Sunday 19 October 2025  22:13:23 +0300 (0:00:02.791)       0:00:51.002 ******** 

TASK [kubernetes/preinstall : Create other directories of root owner] **********
changed: [master] => (item=/etc/kubernetes/ssl)
changed: [worker2] => (item=/etc/kubernetes/ssl)
ok: [master] => (item=/usr/local/bin)
ok: [worker2] => (item=/usr/local/bin)
changed: [worker1] => (item=/etc/kubernetes/ssl)
ok: [worker1] => (item=/usr/local/bin)
Sunday 19 October 2025  22:13:24 +0300 (0:00:01.475)       0:00:52.478 ******** 

TASK [kubernetes/preinstall : Check if kubernetes kubeadm compat cert dir exists] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:25 +0300 (0:00:00.712)       0:00:53.190 ******** 

TASK [kubernetes/preinstall : Create kubernetes kubeadm compat cert dir (kubernetes/kubeadm issue 1498)] ***
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:13:26 +0300 (0:00:00.648)       0:00:53.839 ******** 

TASK [kubernetes/preinstall : Create cni directories] **************************
changed: [master] => (item=/etc/cni/net.d)
changed: [worker2] => (item=/etc/cni/net.d)
ok: [worker2] => (item=/opt/cni/bin)
changed: [worker1] => (item=/etc/cni/net.d)
ok: [master] => (item=/opt/cni/bin)
ok: [worker1] => (item=/opt/cni/bin)
Sunday 19 October 2025  22:13:27 +0300 (0:00:01.089)       0:00:54.928 ******** 

TASK [kubernetes/preinstall : Create calico cni directories] *******************
ok: [master] => (item=/var/lib/calico)
ok: [worker2] => (item=/var/lib/calico)
ok: [worker1] => (item=/var/lib/calico)
Sunday 19 October 2025  22:13:27 +0300 (0:00:00.566)       0:00:55.495 ******** 
Sunday 19 October 2025  22:13:27 +0300 (0:00:00.113)       0:00:55.608 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.212)       0:00:55.820 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.095)       0:00:55.916 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.129)       0:00:56.045 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.133)       0:00:56.179 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.098)       0:00:56.278 ******** 
Sunday 19 October 2025  22:13:28 +0300 (0:00:00.097)       0:00:56.376 ******** 

TASK [kubernetes/preinstall : Create systemd-resolved drop-in directory] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:29 +0300 (0:00:00.641)       0:00:57.017 ******** 

TASK [kubernetes/preinstall : Write Kubespray DNS settings to systemd-resolved] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:31 +0300 (0:00:01.753)       0:00:58.770 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.095)       0:00:58.865 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.091)       0:00:58.956 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.095)       0:00:59.051 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.095)       0:00:59.147 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.098)       0:00:59.246 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.098)       0:00:59.344 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.220)       0:00:59.565 ******** 
Sunday 19 October 2025  22:13:31 +0300 (0:00:00.094)       0:00:59.659 ******** 
Sunday 19 October 2025  22:13:32 +0300 (0:00:00.090)       0:00:59.750 ******** 
Sunday 19 October 2025  22:13:32 +0300 (0:00:00.096)       0:00:59.847 ******** 

TASK [kubernetes/preinstall : Clean previously used sysctl file locations] *****
ok: [master] => (item=ipv4-ip_forward.conf)
ok: [worker1] => (item=ipv4-ip_forward.conf)
ok: [worker2] => (item=ipv4-ip_forward.conf)
ok: [master] => (item=bridge-nf-call.conf)
ok: [worker2] => (item=bridge-nf-call.conf)
ok: [worker1] => (item=bridge-nf-call.conf)
Sunday 19 October 2025  22:13:33 +0300 (0:00:01.113)       0:01:00.960 ******** 

TASK [kubernetes/preinstall : Stat sysctl file configuration] ******************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:33 +0300 (0:00:00.483)       0:01:01.444 ******** 

TASK [kubernetes/preinstall : Change sysctl file path to link source if linked] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:33 +0300 (0:00:00.122)       0:01:01.566 ******** 

TASK [kubernetes/preinstall : Make sure sysctl file path folder exists] ********
ok: [worker1]
ok: [worker2]
ok: [master]
Sunday 19 October 2025  22:13:34 +0300 (0:00:00.680)       0:01:02.247 ******** 

TASK [kubernetes/preinstall : Enable ip forwarding] ****************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:35 +0300 (0:00:00.971)       0:01:03.218 ******** 
Sunday 19 October 2025  22:13:35 +0300 (0:00:00.109)       0:01:03.328 ******** 

TASK [kubernetes/preinstall : Check if we need to set fs.may_detach_mounts] ****
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:36 +0300 (0:00:00.774)       0:01:04.102 ******** 
Sunday 19 October 2025  22:13:36 +0300 (0:00:00.101)       0:01:04.203 ******** 

TASK [kubernetes/preinstall : Ensure kubelet expected parameters are set] ******
ok: [master] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [worker2] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [worker2] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [master] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [worker1] => (item={'name': 'kernel.keys.root_maxbytes', 'value': 25000000})
ok: [worker2] => (item={'name': 'kernel.panic', 'value': 10})
ok: [master] => (item={'name': 'kernel.panic', 'value': 10})
ok: [worker2] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [worker2] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [worker1] => (item={'name': 'kernel.keys.root_maxkeys', 'value': 1000000})
ok: [master] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [worker2] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [worker1] => (item={'name': 'kernel.panic', 'value': 10})
ok: [master] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [master] => (item={'name': 'vm.panic_on_oom', 'value': 0})
ok: [worker1] => (item={'name': 'kernel.panic_on_oops', 'value': 1})
ok: [worker1] => (item={'name': 'vm.overcommit_memory', 'value': 1})
ok: [worker1] => (item={'name': 'vm.panic_on_oom', 'value': 0})
Sunday 19 October 2025  22:13:39 +0300 (0:00:03.246)       0:01:07.450 ******** 

TASK [kubernetes/preinstall : Check dummy module] ******************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:40 +0300 (0:00:00.559)       0:01:08.010 ******** 
Sunday 19 October 2025  22:13:40 +0300 (0:00:00.204)       0:01:08.214 ******** 

TASK [kubernetes/preinstall : Disable fapolicyd service] ***********************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:41 +0300 (0:00:01.047)       0:01:09.261 ******** 
Sunday 19 October 2025  22:13:41 +0300 (0:00:00.098)       0:01:09.360 ******** 
Sunday 19 October 2025  22:13:41 +0300 (0:00:00.091)       0:01:09.451 ******** 
Sunday 19 October 2025  22:13:41 +0300 (0:00:00.098)       0:01:09.550 ******** 
Sunday 19 October 2025  22:13:41 +0300 (0:00:00.092)       0:01:09.643 ******** 
Sunday 19 October 2025  22:13:41 +0300 (0:00:00.092)       0:01:09.735 ******** 
Sunday 19 October 2025  22:13:42 +0300 (0:00:00.211)       0:01:09.946 ******** 
Sunday 19 October 2025  22:13:42 +0300 (0:00:00.093)       0:01:10.040 ******** 
Sunday 19 October 2025  22:13:42 +0300 (0:00:00.096)       0:01:10.136 ******** 

TASK [kubernetes/preinstall : Configure dhclient to supersede search/domain/nameservers] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:43 +0300 (0:00:00.984)       0:01:11.121 ******** 

TASK [kubernetes/preinstall : Configure dhclient hooks for resolv.conf (non-RH)] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:45 +0300 (0:00:02.129)       0:01:13.250 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.105)       0:01:13.356 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.096)       0:01:13.452 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.097)       0:01:13.549 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.129)       0:01:13.679 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.015)       0:01:13.695 ******** 
Sunday 19 October 2025  22:13:45 +0300 (0:00:00.014)       0:01:13.710 ******** 

TASK [kubernetes/preinstall : Check if we are running inside a Azure VM] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:46 +0300 (0:00:00.706)       0:01:14.416 ******** 

TASK [Run calico checks] *******************************************************
included: network_plugin/calico for master, worker1, worker2
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.377)       0:01:14.794 ******** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip)] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.078)       0:01:14.872 ******** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (ipip_mode)] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.079)       0:01:14.952 ******** 

TASK [network_plugin/calico : Stop if legacy encapsulation variables are detected (calcio_ipam_autoallocateblocks)] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.076)       0:01:15.028 ******** 

TASK [network_plugin/calico : Stop if supported Calico versions] ***************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.346)       0:01:15.375 ******** 

TASK [network_plugin/calico : Check if calicoctl.sh exists] ********************
ok: [master]
Sunday 19 October 2025  22:13:47 +0300 (0:00:00.329)       0:01:15.704 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.062)       0:01:15.766 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.057)       0:01:15.824 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.066)       0:01:15.890 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.065)       0:01:15.956 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.063)       0:01:16.019 ******** 

TASK [network_plugin/calico : Check vars defined correctly] ********************
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.078)       0:01:16.098 ******** 

TASK [network_plugin/calico : Check calico network backend defined correctly] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.075)       0:01:16.173 ******** 

TASK [network_plugin/calico : Check ipip and vxlan mode defined correctly] *****
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.073)       0:01:16.246 ******** 
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.064)       0:01:16.311 ******** 

TASK [network_plugin/calico : Check ipip and vxlan mode if simultaneously enabled] ***
ok: [master] => {
    "changed": false,
    "msg": "All assertions passed"
}
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.076)       0:01:16.387 ******** 

TASK [network_plugin/calico : Get Calico default-pool configuration] ***********
ok: [master]
Sunday 19 October 2025  22:13:48 +0300 (0:00:00.329)       0:01:16.717 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.074)       0:01:16.791 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.072)       0:01:16.864 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.067)       0:01:16.931 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.071)       0:01:17.003 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.069)       0:01:17.072 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.062)       0:01:17.135 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.056)       0:01:17.192 ******** 
Sunday 19 October 2025  22:13:49 +0300 (0:00:00.284)       0:01:17.477 ******** 

TASK [container-engine/validate-container-engine : Validate-container-engine | check if fedora coreos] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:13:50 +0300 (0:00:00.628)       0:01:18.105 ******** 

TASK [container-engine/validate-container-engine : Validate-container-engine | set is_ostree] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:13:50 +0300 (0:00:00.123)       0:01:18.228 ******** 

TASK [container-engine/validate-container-engine : Ensure kubelet systemd unit exists] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:13:51 +0300 (0:00:01.007)       0:01:19.236 ******** 

TASK [container-engine/validate-container-engine : Populate service facts] *****
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:01 +0300 (0:00:10.154)       0:01:29.391 ******** 

TASK [container-engine/validate-container-engine : Check if containerd is installed] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:02 +0300 (0:00:00.834)       0:01:30.225 ******** 

TASK [container-engine/validate-container-engine : Check if docker is installed] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:03 +0300 (0:00:01.197)       0:01:31.423 ******** 

TASK [container-engine/validate-container-engine : Check if crio is installed] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:04 +0300 (0:00:01.113)       0:01:32.536 ******** 
Sunday 19 October 2025  22:14:04 +0300 (0:00:00.091)       0:01:32.628 ******** 
Sunday 19 October 2025  22:14:04 +0300 (0:00:00.092)       0:01:32.720 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.085)       0:01:32.806 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.093)       0:01:32.900 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.149)       0:01:33.050 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.087)       0:01:33.138 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.096)       0:01:33.234 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.097)       0:01:33.331 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.092)       0:01:33.423 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.089)       0:01:33.513 ******** 
Sunday 19 October 2025  22:14:05 +0300 (0:00:00.129)       0:01:33.643 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.236)       0:01:33.879 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.093)       0:01:33.972 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.096)       0:01:34.069 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.088)       0:01:34.157 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.128)       0:01:34.286 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.097)       0:01:34.384 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.178)       0:01:34.563 ******** 
Sunday 19 October 2025  22:14:06 +0300 (0:00:00.094)       0:01:34.657 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.093)       0:01:34.751 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.091)       0:01:34.843 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.088)       0:01:34.931 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.273)       0:01:35.205 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.092)       0:01:35.298 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.086)       0:01:35.385 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.097)       0:01:35.482 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.094)       0:01:35.577 ******** 
Sunday 19 October 2025  22:14:07 +0300 (0:00:00.117)       0:01:35.694 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.092)       0:01:35.786 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.092)       0:01:35.878 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.102)       0:01:35.981 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.091)       0:01:36.072 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.087)       0:01:36.159 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.148)       0:01:36.308 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.133)       0:01:36.441 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.090)       0:01:36.532 ******** 
Sunday 19 October 2025  22:14:08 +0300 (0:00:00.208)       0:01:36.740 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.128)       0:01:36.869 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.089)       0:01:36.958 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.091)       0:01:37.050 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.093)       0:01:37.143 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.090)       0:01:37.234 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.128)       0:01:37.363 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.104)       0:01:37.467 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.091)       0:01:37.559 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.086)       0:01:37.645 ******** 
Sunday 19 October 2025  22:14:09 +0300 (0:00:00.094)       0:01:37.740 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.095)       0:01:37.835 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.092)       0:01:37.928 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.212)       0:01:38.141 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.094)       0:01:38.235 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.106)       0:01:38.342 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.093)       0:01:38.435 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.123)       0:01:38.558 ******** 
Sunday 19 October 2025  22:14:10 +0300 (0:00:00.096)       0:01:38.655 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.171)       0:01:38.827 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.094)       0:01:38.921 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.088)       0:01:39.009 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.088)       0:01:39.098 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.088)       0:01:39.186 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.095)       0:01:39.282 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.220)       0:01:39.502 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.126)       0:01:39.628 ******** 
Sunday 19 October 2025  22:14:11 +0300 (0:00:00.095)       0:01:39.724 ******** 
Sunday 19 October 2025  22:14:12 +0300 (0:00:00.086)       0:01:39.810 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:01.286)       0:01:41.096 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:00.092)       0:01:41.189 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:00.124)       0:01:41.313 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:00.093)       0:01:41.406 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:00.132)       0:01:41.539 ******** 
Sunday 19 October 2025  22:14:13 +0300 (0:00:00.125)       0:01:41.664 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.208)       0:01:41.872 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.087)       0:01:41.960 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.086)       0:01:42.046 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.090)       0:01:42.136 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.127)       0:01:42.264 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.091)       0:01:42.355 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.089)       0:01:42.445 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.094)       0:01:42.539 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.086)       0:01:42.625 ******** 
Sunday 19 October 2025  22:14:14 +0300 (0:00:00.086)       0:01:42.712 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.089)       0:01:42.802 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.095)       0:01:42.897 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.085)       0:01:42.983 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.088)       0:01:43.072 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.205)       0:01:43.278 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.092)       0:01:43.370 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.093)       0:01:43.464 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.106)       0:01:43.570 ******** 
Sunday 19 October 2025  22:14:15 +0300 (0:00:00.090)       0:01:43.661 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.090)       0:01:43.751 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.087)       0:01:43.839 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.085)       0:01:43.925 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.089)       0:01:44.015 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.090)       0:01:44.105 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.083)       0:01:44.189 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.087)       0:01:44.276 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.091)       0:01:44.368 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.093)       0:01:44.462 ******** 
Sunday 19 October 2025  22:14:16 +0300 (0:00:00.090)       0:01:44.552 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.252)       0:01:44.805 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.089)       0:01:44.894 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.091)       0:01:44.985 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.080)       0:01:45.066 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.086)       0:01:45.152 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.091)       0:01:45.243 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.110)       0:01:45.354 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.086)       0:01:45.440 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.087)       0:01:45.528 ******** 
Sunday 19 October 2025  22:14:17 +0300 (0:00:00.128)       0:01:45.656 ******** 

TASK [container-engine/containerd-common : Containerd-common | check if fedora coreos] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:18 +0300 (0:00:00.733)       0:01:46.390 ******** 

TASK [container-engine/containerd-common : Containerd-common | set is_ostree] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:18 +0300 (0:00:00.113)       0:01:46.503 ******** 
Sunday 19 October 2025  22:14:19 +0300 (0:00:00.259)       0:01:46.762 ******** 

TASK [container-engine/runc : Runc | check if fedora coreos] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:19 +0300 (0:00:00.601)       0:01:47.364 ******** 

TASK [container-engine/runc : Runc | set is_ostree] ****************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:19 +0300 (0:00:00.113)       0:01:47.477 ******** 

TASK [container-engine/runc : Runc | Uninstall runc package managed by package manager] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:21 +0300 (0:00:02.040)       0:01:49.518 ******** 

TASK [container-engine/runc : Runc | Download runc binary] *********************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/container-engine/runc/tasks/../../../download/tasks/download_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:14:21 +0300 (0:00:00.149)       0:01:49.667 ******** 

TASK [container-engine/runc : Prep_download | Set a few facts] *****************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:22 +0300 (0:00:00.724)       0:01:50.392 ******** 
Sunday 19 October 2025  22:14:22 +0300 (0:00:00.104)       0:01:50.497 ******** 

TASK [container-engine/runc : Download_file | Set pathname of cached file] *****
ok: [worker1]
ok: [worker2]
ok: [master]
Sunday 19 October 2025  22:14:24 +0300 (0:00:01.284)       0:01:51.782 ******** 

TASK [container-engine/runc : Download_file | Create dest directory on node] ***
ok: [worker2]
changed: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:26 +0300 (0:00:02.583)       0:01:54.366 ******** 
Sunday 19 October 2025  22:14:26 +0300 (0:00:00.046)       0:01:54.412 ******** 
Sunday 19 October 2025  22:14:26 +0300 (0:00:00.060)       0:01:54.473 ******** 

TASK [container-engine/runc : Download_file | Download item] *******************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:34 +0300 (0:00:07.439)       0:02:01.912 ******** 
Sunday 19 October 2025  22:14:34 +0300 (0:00:00.094)       0:02:02.007 ******** 
Sunday 19 October 2025  22:14:34 +0300 (0:00:00.093)       0:02:02.100 ******** 
Sunday 19 October 2025  22:14:34 +0300 (0:00:00.088)       0:02:02.189 ******** 

TASK [container-engine/runc : Download_file | Extract file archives] ***********
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:14:34 +0300 (0:00:00.274)       0:02:02.464 ******** 
Sunday 19 October 2025  22:14:35 +0300 (0:00:00.704)       0:02:03.168 ******** 

TASK [container-engine/runc : Copy runc binary from download dir] **************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:37 +0300 (0:00:01.889)       0:02:05.057 ******** 

TASK [container-engine/runc : Runc | Remove orphaned binary] *******************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:38 +0300 (0:00:00.855)       0:02:05.913 ******** 

TASK [container-engine/crictl : Install crictl] ********************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/container-engine/crictl/tasks/crictl.yml for master, worker1, worker2
Sunday 19 October 2025  22:14:38 +0300 (0:00:00.133)       0:02:06.046 ******** 

TASK [container-engine/crictl : Crictl | Download crictl] **********************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/container-engine/crictl/tasks/../../../download/tasks/download_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:14:38 +0300 (0:00:00.153)       0:02:06.199 ******** 

TASK [container-engine/crictl : Prep_download | Set a few facts] ***************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:39 +0300 (0:00:00.716)       0:02:06.916 ******** 
Sunday 19 October 2025  22:14:39 +0300 (0:00:00.100)       0:02:07.017 ******** 

TASK [container-engine/crictl : Download_file | Set pathname of cached file] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:40 +0300 (0:00:01.506)       0:02:08.524 ******** 

TASK [container-engine/crictl : Download_file | Create dest directory on node] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:14:43 +0300 (0:00:02.559)       0:02:11.083 ******** 
Sunday 19 October 2025  22:14:43 +0300 (0:00:00.051)       0:02:11.135 ******** 
Sunday 19 October 2025  22:14:43 +0300 (0:00:00.326)       0:02:11.461 ******** 

TASK [container-engine/crictl : Download_file | Download item] *****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:14:50 +0300 (0:00:06.884)       0:02:18.346 ******** 
Sunday 19 October 2025  22:14:50 +0300 (0:00:00.099)       0:02:18.445 ******** 
Sunday 19 October 2025  22:14:50 +0300 (0:00:00.104)       0:02:18.549 ******** 
Sunday 19 October 2025  22:14:50 +0300 (0:00:00.094)       0:02:18.643 ******** 

TASK [container-engine/crictl : Download_file | Extract file archives] *********
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:14:51 +0300 (0:00:00.152)       0:02:18.796 ******** 

TASK [container-engine/crictl : Extract_file | Unpacking archive] **************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:14:59 +0300 (0:00:08.844)       0:02:27.641 ******** 

TASK [container-engine/crictl : Install crictl config] *************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:02 +0300 (0:00:02.580)       0:02:30.221 ******** 

TASK [container-engine/crictl : Copy crictl binary from download dir] **********
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:04 +0300 (0:00:01.603)       0:02:31.824 ******** 

TASK [container-engine/nerdctl : Nerdctl | Download nerdctl] *******************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/container-engine/nerdctl/tasks/../../../download/tasks/download_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:15:04 +0300 (0:00:00.157)       0:02:31.982 ******** 

TASK [container-engine/nerdctl : Prep_download | Set a few facts] **************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:15:04 +0300 (0:00:00.735)       0:02:32.717 ******** 
Sunday 19 October 2025  22:15:05 +0300 (0:00:00.103)       0:02:32.820 ******** 

TASK [container-engine/nerdctl : Download_file | Set pathname of cached file] ***
ok: [worker1]
ok: [master]
ok: [worker2]
Sunday 19 October 2025  22:15:06 +0300 (0:00:01.545)       0:02:34.365 ******** 

TASK [container-engine/nerdctl : Download_file | Create dest directory on node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:09 +0300 (0:00:02.630)       0:02:36.996 ******** 
Sunday 19 October 2025  22:15:09 +0300 (0:00:00.043)       0:02:37.040 ******** 
Sunday 19 October 2025  22:15:09 +0300 (0:00:00.055)       0:02:37.095 ******** 

TASK [container-engine/nerdctl : Download_file | Download item] ****************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:16 +0300 (0:00:07.418)       0:02:44.514 ******** 
Sunday 19 October 2025  22:15:16 +0300 (0:00:00.094)       0:02:44.608 ******** 
Sunday 19 October 2025  22:15:16 +0300 (0:00:00.095)       0:02:44.704 ******** 
Sunday 19 October 2025  22:15:17 +0300 (0:00:00.090)       0:02:44.795 ******** 

TASK [container-engine/nerdctl : Download_file | Extract file archives] ********
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:15:17 +0300 (0:00:00.152)       0:02:44.948 ******** 

TASK [container-engine/nerdctl : Extract_file | Unpacking archive] *************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:15:25 +0300 (0:00:08.790)       0:02:53.738 ******** 

TASK [container-engine/nerdctl : Nerdctl | Copy nerdctl binary from download dir] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:27 +0300 (0:00:01.771)       0:02:55.510 ******** 

TASK [container-engine/nerdctl : Nerdctl | Create configuration dir] ***********
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:15:28 +0300 (0:00:00.831)       0:02:56.342 ******** 

TASK [container-engine/nerdctl : Nerdctl | Install nerdctl configuration] ******
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:30 +0300 (0:00:01.892)       0:02:58.234 ******** 

TASK [container-engine/containerd : Containerd | Download containerd] **********
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/container-engine/containerd/tasks/../../../download/tasks/download_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:15:30 +0300 (0:00:00.263)       0:02:58.498 ******** 

TASK [container-engine/containerd : Prep_download | Set a few facts] ***********
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:15:31 +0300 (0:00:00.716)       0:02:59.215 ******** 
Sunday 19 October 2025  22:15:31 +0300 (0:00:00.102)       0:02:59.317 ******** 

TASK [container-engine/containerd : Download_file | Set pathname of cached file] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:15:32 +0300 (0:00:01.309)       0:03:00.627 ******** 

TASK [container-engine/containerd : Download_file | Create dest directory on node] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:15:35 +0300 (0:00:02.523)       0:03:03.150 ******** 
Sunday 19 October 2025  22:15:35 +0300 (0:00:00.049)       0:03:03.200 ******** 
Sunday 19 October 2025  22:15:35 +0300 (0:00:00.057)       0:03:03.258 ******** 

TASK [container-engine/containerd : Download_file | Download item] *************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:42 +0300 (0:00:07.161)       0:03:10.420 ******** 
Sunday 19 October 2025  22:15:42 +0300 (0:00:00.094)       0:03:10.514 ******** 
Sunday 19 October 2025  22:15:42 +0300 (0:00:00.101)       0:03:10.615 ******** 
Sunday 19 October 2025  22:15:42 +0300 (0:00:00.095)       0:03:10.711 ******** 

TASK [container-engine/containerd : Download_file | Extract file archives] *****
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:15:43 +0300 (0:00:00.143)       0:03:10.854 ******** 
Sunday 19 October 2025  22:15:43 +0300 (0:00:00.714)       0:03:11.569 ******** 

TASK [container-engine/containerd : Containerd | Unpack containerd archive] ****
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:53 +0300 (0:00:09.525)       0:03:21.094 ******** 

TASK [container-engine/containerd : Containerd | Generate systemd service for containerd] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:15:54 +0300 (0:00:01.485)       0:03:22.580 ******** 

TASK [container-engine/containerd : Containerd | Ensure containerd directories exist] ***
ok: [master] => (item=/etc/systemd/system/containerd.service.d)
ok: [worker2] => (item=/etc/systemd/system/containerd.service.d)
ok: [master] => (item=/etc/containerd)
ok: [worker1] => (item=/etc/systemd/system/containerd.service.d)
ok: [worker2] => (item=/etc/containerd)
changed: [master] => (item=/var/lib/containerd)
changed: [worker2] => (item=/var/lib/containerd)
changed: [worker2] => (item=/run/containerd)
changed: [master] => (item=/run/containerd)
ok: [worker1] => (item=/etc/containerd)
changed: [worker1] => (item=/var/lib/containerd)
changed: [worker1] => (item=/run/containerd)
Sunday 19 October 2025  22:15:57 +0300 (0:00:03.100)       0:03:25.681 ******** 
Sunday 19 October 2025  22:15:58 +0300 (0:00:00.098)       0:03:25.779 ******** 

TASK [container-engine/containerd : Containerd | Generate default base_runtime_spec] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:15:58 +0300 (0:00:00.659)       0:03:26.438 ******** 

TASK [container-engine/containerd : Containerd | Store generated default base_runtime_spec] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:15:58 +0300 (0:00:00.127)       0:03:26.566 ******** 

TASK [container-engine/containerd : Containerd | Write base_runtime_specs] *****
ok: [worker2] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [master] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
ok: [worker1] => (item={'key': 'cri-base.json', 'value': {'ociVersion': '1.2.1', 'process': {'user': {'uid': 0, 'gid': 0}, 'cwd': '/', 'capabilities': {'bounding': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'effective': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE'], 'permitted': ['CAP_CHOWN', 'CAP_DAC_OVERRIDE', 'CAP_FSETID', 'CAP_FOWNER', 'CAP_MKNOD', 'CAP_NET_RAW', 'CAP_SETGID', 'CAP_SETUID', 'CAP_SETFCAP', 'CAP_SETPCAP', 'CAP_NET_BIND_SERVICE', 'CAP_SYS_CHROOT', 'CAP_KILL', 'CAP_AUDIT_WRITE']}, 'rlimits': [{'type': 'RLIMIT_NOFILE', 'hard': 65535, 'soft': 65535}], 'noNewPrivileges': True}, 'root': {'path': 'rootfs'}, 'mounts': [{'destination': '/proc', 'type': 'proc', 'source': 'proc', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/dev', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}, {'destination': '/dev/pts', 'type': 'devpts', 'source': 'devpts', 'options': ['nosuid', 'noexec', 'newinstance', 'ptmxmode=0666', 'mode=0620', 'gid=5']}, {'destination': '/dev/shm', 'type': 'tmpfs', 'source': 'shm', 'options': ['nosuid', 'noexec', 'nodev', 'mode=1777', 'size=65536k']}, {'destination': '/dev/mqueue', 'type': 'mqueue', 'source': 'mqueue', 'options': ['nosuid', 'noexec', 'nodev']}, {'destination': '/sys', 'type': 'sysfs', 'source': 'sysfs', 'options': ['nosuid', 'noexec', 'nodev', 'ro']}, {'destination': '/run', 'type': 'tmpfs', 'source': 'tmpfs', 'options': ['nosuid', 'strictatime', 'mode=755', 'size=65536k']}], 'linux': {'resources': {'devices': [{'allow': False, 'access': 'rwm'}]}, 'cgroupsPath': '/default', 'namespaces': [{'type': 'pid'}, {'type': 'ipc'}, {'type': 'uts'}, {'type': 'mount'}, {'type': 'network'}], 'maskedPaths': ['/proc/acpi', '/proc/asound', '/proc/kcore', '/proc/keys', '/proc/latency_stats', '/proc/timer_list', '/proc/timer_stats', '/proc/sched_debug', '/sys/firmware', '/sys/devices/virtual/powercap', '/proc/scsi'], 'readonlyPaths': ['/proc/bus', '/proc/fs', '/proc/irq', '/proc/sys', '/proc/sysrq-trigger']}}})
Sunday 19 October 2025  22:16:00 +0300 (0:00:01.833)       0:03:28.399 ******** 

TASK [container-engine/containerd : Containerd | Copy containerd config file] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:02 +0300 (0:00:02.200)       0:03:30.599 ******** 

TASK [container-engine/containerd : Containerd | Create registry directories] ***
ok: [worker2] => (item=None)
ok: [worker2]
ok: [master] => (item=None)
ok: [master]
ok: [worker1] => (item=None)
ok: [worker1]
Sunday 19 October 2025  22:16:03 +0300 (0:00:00.856)       0:03:31.455 ******** 

TASK [container-engine/containerd : Containerd | Write hosts.toml file] ********
ok: [master] => (item=None)
ok: [master]
ok: [worker2] => (item=None)
ok: [worker2]
ok: [worker1] => (item=None)
ok: [worker1]
Sunday 19 October 2025  22:16:06 +0300 (0:00:02.531)       0:03:33.987 ******** 
Sunday 19 October 2025  22:16:06 +0300 (0:00:00.029)       0:03:34.016 ******** 
Sunday 19 October 2025  22:16:06 +0300 (0:00:00.025)       0:03:34.042 ******** 
Sunday 19 October 2025  22:16:06 +0300 (0:00:00.029)       0:03:34.071 ******** 

TASK [container-engine/containerd : Containerd | Ensure containerd is started and enabled] ***
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:16:09 +0300 (0:00:02.992)       0:03:37.063 ******** 
Sunday 19 October 2025  22:16:09 +0300 (0:00:00.092)       0:03:37.156 ******** 
Sunday 19 October 2025  22:16:09 +0300 (0:00:00.215)       0:03:37.371 ******** 
Sunday 19 October 2025  22:16:09 +0300 (0:00:00.169)       0:03:37.541 ******** 
Sunday 19 October 2025  22:16:09 +0300 (0:00:00.098)       0:03:37.639 ******** 
Sunday 19 October 2025  22:16:09 +0300 (0:00:00.106)       0:03:37.745 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.146)       0:03:37.891 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.092)       0:03:37.984 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.084)       0:03:38.069 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.091)       0:03:38.161 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.092)       0:03:38.253 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.089)       0:03:38.343 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.086)       0:03:38.429 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.106)       0:03:38.536 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.100)       0:03:38.637 ******** 
Sunday 19 October 2025  22:16:10 +0300 (0:00:00.096)       0:03:38.733 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.211)       0:03:38.945 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.097)       0:03:39.042 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.146)       0:03:39.188 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.099)       0:03:39.288 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.120)       0:03:39.408 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.109)       0:03:39.518 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.032)       0:03:39.550 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.027)       0:03:39.578 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.029)       0:03:39.607 ******** 
Sunday 19 October 2025  22:16:11 +0300 (0:00:00.087)       0:03:39.695 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.096)       0:03:39.791 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.093)       0:03:39.884 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.092)       0:03:39.977 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.096)       0:03:40.074 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.104)       0:03:40.178 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.231)       0:03:40.410 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.096)       0:03:40.506 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.030)       0:03:40.537 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.027)       0:03:40.565 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.031)       0:03:40.596 ******** 
Sunday 19 October 2025  22:16:12 +0300 (0:00:00.143)       0:03:40.740 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.100)       0:03:40.841 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.099)       0:03:40.940 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.111)       0:03:41.051 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.027)       0:03:41.078 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.027)       0:03:41.106 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.103)       0:03:41.210 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.114)       0:03:41.324 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.064)       0:03:41.389 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.051)       0:03:41.441 ******** 
Sunday 19 October 2025  22:16:13 +0300 (0:00:00.231)       0:03:41.672 ******** 
Sunday 19 October 2025  22:16:14 +0300 (0:00:00.102)       0:03:41.774 ******** 

TASK [download : Prep_download | Register docker images info] ******************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:16:14 +0300 (0:00:00.879)       0:03:42.654 ******** 

TASK [download : Prep_download | Create staging directory on remote node] ******
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:16:15 +0300 (0:00:00.824)       0:03:43.478 ******** 
Sunday 19 October 2025  22:16:15 +0300 (0:00:00.069)       0:03:43.548 ******** 

TASK [download : Download | Get kubeadm binary and list of required images] ****
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/prep_kubeadm_images.yml for master
Sunday 19 October 2025  22:16:15 +0300 (0:00:00.196)       0:03:43.745 ******** 

TASK [download : Prep_kubeadm_images | Download kubeadm binary] ****************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master
Sunday 19 October 2025  22:16:16 +0300 (0:00:00.866)       0:03:44.611 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
Sunday 19 October 2025  22:16:17 +0300 (0:00:00.608)       0:03:45.219 ******** 
Sunday 19 October 2025  22:16:17 +0300 (0:00:00.048)       0:03:45.268 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
Sunday 19 October 2025  22:16:18 +0300 (0:00:01.458)       0:03:46.727 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
changed: [master]
Sunday 19 October 2025  22:16:21 +0300 (0:00:02.294)       0:03:49.022 ******** 
Sunday 19 October 2025  22:16:21 +0300 (0:00:00.043)       0:03:49.065 ******** 
Sunday 19 October 2025  22:16:21 +0300 (0:00:00.052)       0:03:49.118 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
Sunday 19 October 2025  22:16:27 +0300 (0:00:06.565)       0:03:55.683 ******** 
Sunday 19 October 2025  22:16:27 +0300 (0:00:00.038)       0:03:55.722 ******** 
Sunday 19 October 2025  22:16:28 +0300 (0:00:00.040)       0:03:55.762 ******** 
Sunday 19 October 2025  22:16:28 +0300 (0:00:00.047)       0:03:55.810 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master
Sunday 19 October 2025  22:16:28 +0300 (0:00:00.064)       0:03:55.874 ******** 
Sunday 19 October 2025  22:16:28 +0300 (0:00:00.660)       0:03:56.535 ******** 

TASK [download : Prep_kubeadm_images | Copy kubeadm binary from download dir to system path] ***
ok: [master]
Sunday 19 October 2025  22:16:30 +0300 (0:00:01.471)       0:03:58.006 ******** 

TASK [download : Prep_kubeadm_images | Create kubeadm config] ******************
changed: [master]
Sunday 19 October 2025  22:16:31 +0300 (0:00:01.056)       0:03:59.062 ******** 

TASK [download : Prep_kubeadm_images | Generate list of required images] *******
ok: [master]
Sunday 19 October 2025  22:16:31 +0300 (0:00:00.429)       0:03:59.492 ******** 

TASK [download : Prep_kubeadm_images | Parse list of images] *******************
ok: [master] => (item=registry.k8s.io/kube-apiserver:v1.33.5)
ok: [master] => (item=registry.k8s.io/kube-controller-manager:v1.33.5)
ok: [master] => (item=registry.k8s.io/kube-scheduler:v1.33.5)
ok: [master] => (item=registry.k8s.io/kube-proxy:v1.33.5)
Sunday 19 October 2025  22:16:31 +0300 (0:00:00.102)       0:03:59.595 ******** 

TASK [download : Prep_kubeadm_images | Convert list of images to dict for later use] ***
ok: [master]
Sunday 19 October 2025  22:16:31 +0300 (0:00:00.064)       0:03:59.659 ******** 

TASK [download : Download | Download files / images] ***************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master => (item={'key': 'etcd', 'value': {'container': False, 'file': True, 'enabled': True, 'dest': '/tmp/releases/etcd-3.5.22-linux-amd64.tar.gz', 'repo': 'quay.io/coreos/etcd', 'tag': 'v3.5.22', 'checksum': 'sha256:20174ab70a6f3df94da13ecac4610f42c47d25af82426f21c112c2c841ec499a', 'url': 'https://github.com/etcd-io/etcd/releases/download/v3.5.22/etcd-v3.5.22-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['etcd']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'cni', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/cni-plugins-linux-amd64-1.8.0.tgz', 'checksum': 'sha256:ab3bda535f9d90766cccc90d3dddb5482003dd744d7f22bcf98186bf8eea8be6', 'url': 'https://github.com/containernetworking/plugins/releases/download/v1.8.0/cni-plugins-linux-amd64-v1.8.0.tgz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'kubeadm', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubeadm-1.33.5-amd64', 'checksum': 'sha256:6761219749c6c67a56a5668dfe65d669e0c1f34d4b280b72de6d74d47c601f1e', 'url': 'https://dl.k8s.io/release/v1.33.5/bin/linux/amd64/kubeadm', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'kubelet', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubelet-1.33.5-amd64', 'checksum': 'sha256:8f6106b970259486c5af5cbee404d4f23406d96d99dfb92a6965b299c2a4db0e', 'url': 'https://dl.k8s.io/release/v1.33.5/bin/linux/amd64/kubelet', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master => (item={'key': 'kubectl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/kubectl-1.33.5-amd64', 'checksum': 'sha256:6a12d6c39e4a611a3687ee24d8c733961bb4bae1ae975f5204400c0a6930c6fc', 'url': 'https://dl.k8s.io/release/v1.33.5/bin/linux/amd64/kubectl', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'crictl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/crictl-1.33.0-linux-amd64.tar.gz', 'checksum': 'sha256:8307399e714626e69d1213a4cd18c8dec3d0201ecdac009b1802115df8973f0f', 'url': 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.33.0/crictl-v1.33.0-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'runc', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/runc-1.3.1.amd64', 'checksum': 'sha256:53bfce31ca047e537e0767b21c9d529d4b5b3e1cb9c590ca81654f9a5615d80d', 'url': 'https://github.com/opencontainers/runc/releases/download/v1.3.1/runc.amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'containerd', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/containerd-2.1.4-linux-amd64.tar.gz', 'checksum': 'sha256:316d510a0428276d931023f72c09fdff1a6ba81d6cc36f31805fea6a3c88f515', 'url': 'https://github.com/containerd/containerd/releases/download/v2.1.4/containerd-2.1.4-linux-amd64.tar.gz', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'nerdctl', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/nerdctl-2.1.4-linux-amd64.tar.gz', 'checksum': 'sha256:d6e91d3e275bfb3404959b1f95ed25ff6cd83e3181d17b93afe2d39cd025501d', 'url': 'https://github.com/containerd/nerdctl/releases/download/v2.1.4/nerdctl-2.1.4-linux-amd64.tar.gz', 'unarchive': True, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master, worker2, worker1 => (item={'key': 'calicoctl', 'value': {'enabled': True, 'file': True, 'dest': '/tmp/releases/calicoctl-3.30.3-amd64', 'checksum': 'sha256:a7d017d1abf6ef5d6e03267187c0dd68c32f5e937b64decd29d003be44fa6b94', 'url': 'https://github.com/projectcalico/calico/releases/download/v3.30.3/calicoctl-linux-amd64', 'unarchive': False, 'owner': 'root', 'mode': '0755', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'calico_node', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/node', 'tag': 'v3.30.3', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'calico_cni', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/cni', 'tag': 'v3.30.3', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'calico_policy', 'value': {'enabled': True, 'container': True, 'repo': 'quay.io/calico/kube-controllers', 'tag': 'v3.30.3', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_file.yml for master => (item={'key': 'calico_crds', 'value': {'file': True, 'enabled': True, 'dest': '/tmp/releases/calico-3.30.3-kdd-crds/3.30.3.tar.gz', 'checksum': 'sha256:36c50905b9b62a78638bcfb9d1c4faf1efa08e2013265dcd694ec4e370b78dd7', 'url': 'https://github.com/projectcalico/calico/archive/v3.30.3.tar.gz', 'unarchive': True, 'unarchive_extra_opts': ['--strip=3', '--wildcards', '*/libcalico-go/config/crd/'], 'owner': 'root', 'mode': '0755', 'groups': ['kube_control_plane']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'pod_infra', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/pause', 'tag': '3.10', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'coredns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/coredns/coredns', 'tag': 'v1.12.0', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'nodelocaldns', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/dns/k8s-dns-node-cache', 'tag': '1.25.0', 'checksum': '', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master => (item={'key': 'dnsautoscaler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/cpa/cluster-proportional-autoscaler', 'tag': 'v1.8.8', 'checksum': '', 'groups': ['kube_control_plane']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'kubeadm_kube-apiserver', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-apiserver', 'tag': 'v1.33.5', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'kubeadm_kube-controller-manager', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-controller-manager', 'tag': 'v1.33.5', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'kubeadm_kube-scheduler', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-scheduler', 'tag': 'v1.33.5', 'groups': ['k8s_cluster']}})
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/download_container.yml for master, worker2, worker1 => (item={'key': 'kubeadm_kube-proxy', 'value': {'enabled': True, 'container': True, 'repo': 'registry.k8s.io/kube-proxy', 'tag': 'v1.33.5', 'groups': ['k8s_cluster']}})
Sunday 19 October 2025  22:16:34 +0300 (0:00:02.441)       0:04:02.100 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
Sunday 19 October 2025  22:16:34 +0300 (0:00:00.068)       0:04:02.168 ******** 
Sunday 19 October 2025  22:16:34 +0300 (0:00:00.051)       0:04:02.220 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
Sunday 19 October 2025  22:16:34 +0300 (0:00:00.059)       0:04:02.279 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
Sunday 19 October 2025  22:16:34 +0300 (0:00:00.386)       0:04:02.665 ******** 
Sunday 19 October 2025  22:16:34 +0300 (0:00:00.051)       0:04:02.716 ******** 
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.055)       0:04:02.772 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.603)       0:04:03.375 ******** 
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.039)       0:04:03.414 ******** 
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.039)       0:04:03.454 ******** 
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.042)       0:04:03.496 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master
Sunday 19 October 2025  22:16:35 +0300 (0:00:00.061)       0:04:03.557 ******** 

TASK [download : Extract_file | Unpacking archive] *****************************
ok: [master]
Sunday 19 October 2025  22:16:38 +0300 (0:00:02.245)       0:04:05.803 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:38 +0300 (0:00:00.111)       0:04:05.914 ******** 
Sunday 19 October 2025  22:16:38 +0300 (0:00:00.085)       0:04:06.000 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:38 +0300 (0:00:00.113)       0:04:06.114 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:16:39 +0300 (0:00:00.649)       0:04:06.764 ******** 
Sunday 19 October 2025  22:16:39 +0300 (0:00:00.041)       0:04:06.805 ******** 
Sunday 19 October 2025  22:16:39 +0300 (0:00:00.050)       0:04:06.856 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:40 +0300 (0:00:01.335)       0:04:08.191 ******** 
Sunday 19 October 2025  22:16:40 +0300 (0:00:00.088)       0:04:08.279 ******** 
Sunday 19 October 2025  22:16:40 +0300 (0:00:00.090)       0:04:08.370 ******** 
Sunday 19 October 2025  22:16:40 +0300 (0:00:00.084)       0:04:08.454 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:16:40 +0300 (0:00:00.162)       0:04:08.617 ******** 
Sunday 19 October 2025  22:16:40 +0300 (0:00:00.095)       0:04:08.713 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:41 +0300 (0:00:00.106)       0:04:08.820 ******** 
Sunday 19 October 2025  22:16:41 +0300 (0:00:00.090)       0:04:08.910 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:41 +0300 (0:00:00.113)       0:04:09.024 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:42 +0300 (0:00:00.771)       0:04:09.795 ******** 
Sunday 19 October 2025  22:16:42 +0300 (0:00:00.042)       0:04:09.837 ******** 
Sunday 19 October 2025  22:16:42 +0300 (0:00:00.059)       0:04:09.897 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:43 +0300 (0:00:01.338)       0:04:11.236 ******** 
Sunday 19 October 2025  22:16:43 +0300 (0:00:00.250)       0:04:11.486 ******** 
Sunday 19 October 2025  22:16:43 +0300 (0:00:00.087)       0:04:11.573 ******** 
Sunday 19 October 2025  22:16:43 +0300 (0:00:00.098)       0:04:11.671 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:16:44 +0300 (0:00:00.164)       0:04:11.836 ******** 
Sunday 19 October 2025  22:16:44 +0300 (0:00:00.097)       0:04:11.933 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:44 +0300 (0:00:00.109)       0:04:12.043 ******** 
Sunday 19 October 2025  22:16:44 +0300 (0:00:00.090)       0:04:12.133 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:44 +0300 (0:00:00.121)       0:04:12.255 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:45 +0300 (0:00:00.864)       0:04:13.119 ******** 
Sunday 19 October 2025  22:16:45 +0300 (0:00:00.042)       0:04:13.162 ******** 
Sunday 19 October 2025  22:16:45 +0300 (0:00:00.056)       0:04:13.218 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:16:47 +0300 (0:00:01.670)       0:04:14.889 ******** 
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.086)       0:04:14.975 ******** 
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.087)       0:04:15.062 ******** 
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.092)       0:04:15.155 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.297)       0:04:15.452 ******** 
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.092)       0:04:15.545 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.055)       0:04:15.600 ******** 
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.036)       0:04:15.637 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
Sunday 19 October 2025  22:16:47 +0300 (0:00:00.054)       0:04:15.692 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
Sunday 19 October 2025  22:16:48 +0300 (0:00:00.598)       0:04:16.290 ******** 
Sunday 19 October 2025  22:16:48 +0300 (0:00:00.048)       0:04:16.339 ******** 
Sunday 19 October 2025  22:16:48 +0300 (0:00:00.053)       0:04:16.393 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.705)       0:04:17.098 ******** 
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.035)       0:04:17.133 ******** 
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.040)       0:04:17.173 ******** 
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.036)       0:04:17.210 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.063)       0:04:17.274 ******** 
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.044)       0:04:17.318 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.109)       0:04:17.428 ******** 
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.086)       0:04:17.515 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:49 +0300 (0:00:00.115)       0:04:17.630 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:50 +0300 (0:00:00.641)       0:04:18.272 ******** 
Sunday 19 October 2025  22:16:50 +0300 (0:00:00.040)       0:04:18.312 ******** 
Sunday 19 October 2025  22:16:50 +0300 (0:00:00.055)       0:04:18.368 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:16:51 +0300 (0:00:00.969)       0:04:19.337 ******** 
Sunday 19 October 2025  22:16:51 +0300 (0:00:00.091)       0:04:19.429 ******** 
Sunday 19 October 2025  22:16:51 +0300 (0:00:00.220)       0:04:19.650 ******** 
Sunday 19 October 2025  22:16:51 +0300 (0:00:00.083)       0:04:19.734 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:16:52 +0300 (0:00:00.160)       0:04:19.895 ******** 

TASK [download : Extract_file | Unpacking archive] *****************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:16:55 +0300 (0:00:03.418)       0:04:23.314 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:55 +0300 (0:00:00.108)       0:04:23.422 ******** 
Sunday 19 October 2025  22:16:55 +0300 (0:00:00.097)       0:04:23.519 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:55 +0300 (0:00:00.115)       0:04:23.634 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:56 +0300 (0:00:00.673)       0:04:24.308 ******** 
Sunday 19 October 2025  22:16:56 +0300 (0:00:00.040)       0:04:24.348 ******** 
Sunday 19 October 2025  22:16:56 +0300 (0:00:00.052)       0:04:24.400 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:16:57 +0300 (0:00:00.709)       0:04:25.110 ******** 
Sunday 19 October 2025  22:16:57 +0300 (0:00:00.086)       0:04:25.196 ******** 
Sunday 19 October 2025  22:16:57 +0300 (0:00:00.083)       0:04:25.280 ******** 
Sunday 19 October 2025  22:16:57 +0300 (0:00:00.091)       0:04:25.372 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:16:57 +0300 (0:00:00.290)       0:04:25.662 ******** 
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.091)       0:04:25.754 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.119)       0:04:25.873 ******** 
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.088)       0:04:25.962 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.119)       0:04:26.082 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.619)       0:04:26.702 ******** 
Sunday 19 October 2025  22:16:58 +0300 (0:00:00.043)       0:04:26.745 ******** 
Sunday 19 October 2025  22:16:59 +0300 (0:00:00.054)       0:04:26.799 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:16:59 +0300 (0:00:00.844)       0:04:27.643 ******** 
Sunday 19 October 2025  22:16:59 +0300 (0:00:00.088)       0:04:27.732 ******** 
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.087)       0:04:27.819 ******** 
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.091)       0:04:27.911 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.151)       0:04:28.062 ******** 
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.095)       0:04:28.158 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.114)       0:04:28.272 ******** 
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.221)       0:04:28.494 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:00 +0300 (0:00:00.116)       0:04:28.610 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:17:01 +0300 (0:00:00.687)       0:04:29.297 ******** 
Sunday 19 October 2025  22:17:01 +0300 (0:00:00.048)       0:04:29.346 ******** 
Sunday 19 October 2025  22:17:01 +0300 (0:00:00.053)       0:04:29.399 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:17:02 +0300 (0:00:00.917)       0:04:30.317 ******** 
Sunday 19 October 2025  22:17:02 +0300 (0:00:00.085)       0:04:30.402 ******** 
Sunday 19 October 2025  22:17:02 +0300 (0:00:00.095)       0:04:30.498 ******** 
Sunday 19 October 2025  22:17:02 +0300 (0:00:00.088)       0:04:30.586 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:17:02 +0300 (0:00:00.149)       0:04:30.736 ******** 

TASK [download : Extract_file | Unpacking archive] *****************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:17:07 +0300 (0:00:04.144)       0:04:34.881 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:07 +0300 (0:00:00.109)       0:04:34.990 ******** 
Sunday 19 October 2025  22:17:07 +0300 (0:00:00.085)       0:04:35.076 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:07 +0300 (0:00:00.110)       0:04:35.187 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:17:08 +0300 (0:00:00.693)       0:04:35.880 ******** 
Sunday 19 October 2025  22:17:08 +0300 (0:00:00.036)       0:04:35.917 ******** 
Sunday 19 October 2025  22:17:08 +0300 (0:00:00.331)       0:04:36.249 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:17:09 +0300 (0:00:01.336)       0:04:37.585 ******** 
Sunday 19 October 2025  22:17:09 +0300 (0:00:00.081)       0:04:37.666 ******** 
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.090)       0:04:37.757 ******** 
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.089)       0:04:37.847 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master, worker1, worker2
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.148)       0:04:37.995 ******** 
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.096)       0:04:38.091 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.110)       0:04:38.202 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "quay.io/calico/node"
}
ok: [worker1] => {
    "msg": "quay.io/calico/node"
}
ok: [worker2] => {
    "msg": "quay.io/calico/node"
}
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.109)       0:04:38.312 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.107)       0:04:38.419 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.120)       0:04:38.540 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:10 +0300 (0:00:00.109)       0:04:38.649 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.106)       0:04:38.756 ******** 
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.089)       0:04:38.846 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.254)       0:04:39.101 ******** 
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.089)       0:04:39.190 ******** 
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.087)       0:04:39.278 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.110)       0:04:39.389 ******** 
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.095)       0:04:39.484 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:17:11 +0300 (0:00:00.168)       0:04:39.653 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.559)       0:04:40.212 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.105)       0:04:40.317 ******** 
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.093)       0:04:40.411 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull quay.io/calico/node:v3.30.3 required is: True"
}
ok: [worker1] => {
    "msg": "Pull quay.io/calico/node:v3.30.3 required is: True"
}
ok: [worker2] => {
    "msg": "Pull quay.io/calico/node:v3.30.3 required is: True"
}
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.113)       0:04:40.525 ******** 
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.087)       0:04:40.612 ******** 
Sunday 19 October 2025  22:17:12 +0300 (0:00:00.086)       0:04:40.698 ******** 
Sunday 19 October 2025  22:17:13 +0300 (0:00:00.088)       0:04:40.788 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:17:46 +0300 (0:00:33.129)       0:05:13.917 ******** 
Sunday 19 October 2025  22:17:46 +0300 (0:00:00.056)       0:05:13.973 ******** 
Sunday 19 October 2025  22:17:46 +0300 (0:00:00.090)       0:05:14.064 ******** 
Sunday 19 October 2025  22:17:46 +0300 (0:00:00.089)       0:05:14.153 ******** 
Sunday 19 October 2025  22:17:46 +0300 (0:00:00.086)       0:05:14.239 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.892)       0:05:15.132 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.116)       0:05:15.249 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "quay.io/calico/cni"
}
ok: [worker1] => {
    "msg": "quay.io/calico/cni"
}
ok: [worker2] => {
    "msg": "quay.io/calico/cni"
}
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.109)       0:05:15.359 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.111)       0:05:15.470 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.119)       0:05:15.590 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:47 +0300 (0:00:00.110)       0:05:15.700 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.109)       0:05:15.810 ******** 
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.084)       0:05:15.894 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.111)       0:05:16.006 ******** 
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.089)       0:05:16.096 ******** 
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.085)       0:05:16.181 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.263)       0:05:16.445 ******** 
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.095)       0:05:16.540 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:17:48 +0300 (0:00:00.171)       0:05:16.711 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [worker1]
ok: [master]
Sunday 19 October 2025  22:17:49 +0300 (0:00:00.606)       0:05:17.318 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:17:49 +0300 (0:00:00.111)       0:05:17.430 ******** 
Sunday 19 October 2025  22:17:49 +0300 (0:00:00.096)       0:05:17.527 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull quay.io/calico/cni:v3.30.3 required is: True"
}
ok: [worker1] => {
    "msg": "Pull quay.io/calico/cni:v3.30.3 required is: True"
}
ok: [worker2] => {
    "msg": "Pull quay.io/calico/cni:v3.30.3 required is: True"
}
Sunday 19 October 2025  22:17:49 +0300 (0:00:00.109)       0:05:17.636 ******** 
Sunday 19 October 2025  22:17:49 +0300 (0:00:00.089)       0:05:17.725 ******** 
Sunday 19 October 2025  22:17:50 +0300 (0:00:00.085)       0:05:17.811 ******** 
Sunday 19 October 2025  22:17:50 +0300 (0:00:00.093)       0:05:17.905 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:18:00 +0300 (0:00:10.316)       0:05:28.222 ******** 
Sunday 19 October 2025  22:18:00 +0300 (0:00:00.055)       0:05:28.277 ******** 
Sunday 19 October 2025  22:18:00 +0300 (0:00:00.088)       0:05:28.366 ******** 
Sunday 19 October 2025  22:18:00 +0300 (0:00:00.220)       0:05:28.586 ******** 
Sunday 19 October 2025  22:18:00 +0300 (0:00:00.087)       0:05:28.673 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:01 +0300 (0:00:00.632)       0:05:29.305 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:01 +0300 (0:00:00.109)       0:05:29.415 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "quay.io/calico/kube-controllers"
}
ok: [worker1] => {
    "msg": "quay.io/calico/kube-controllers"
}
ok: [worker2] => {
    "msg": "quay.io/calico/kube-controllers"
}
Sunday 19 October 2025  22:18:01 +0300 (0:00:00.112)       0:05:29.528 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:01 +0300 (0:00:00.106)       0:05:29.634 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.122)       0:05:29.757 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.111)       0:05:29.868 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.107)       0:05:29.975 ******** 
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.087)       0:05:30.063 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.111)       0:05:30.175 ******** 
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.089)       0:05:30.264 ******** 
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.090)       0:05:30.355 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.117)       0:05:30.472 ******** 
Sunday 19 October 2025  22:18:02 +0300 (0:00:00.090)       0:05:30.563 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:18:03 +0300 (0:00:00.310)       0:05:30.874 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:18:04 +0300 (0:00:01.074)       0:05:31.949 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.108)       0:05:32.057 ******** 
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.091)       0:05:32.149 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.30.3 required is: True"
}
ok: [worker1] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.30.3 required is: True"
}
ok: [worker2] => {
    "msg": "Pull quay.io/calico/kube-controllers:v3.30.3 required is: True"
}
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.119)       0:05:32.269 ******** 
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.095)       0:05:32.365 ******** 
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.094)       0:05:32.460 ******** 
Sunday 19 October 2025  22:18:04 +0300 (0:00:00.101)       0:05:32.561 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:18:14 +0300 (0:00:09.444)       0:05:42.006 ******** 
Sunday 19 October 2025  22:18:14 +0300 (0:00:00.058)       0:05:42.064 ******** 
Sunday 19 October 2025  22:18:14 +0300 (0:00:00.092)       0:05:42.157 ******** 
Sunday 19 October 2025  22:18:14 +0300 (0:00:00.092)       0:05:42.249 ******** 
Sunday 19 October 2025  22:18:14 +0300 (0:00:00.085)       0:05:42.335 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:15 +0300 (0:00:00.858)       0:05:43.194 ******** 

TASK [download : Prep_download | Set a few facts] ******************************
ok: [master]
Sunday 19 October 2025  22:18:15 +0300 (0:00:00.049)       0:05:43.243 ******** 
Sunday 19 October 2025  22:18:15 +0300 (0:00:00.175)       0:05:43.419 ******** 

TASK [download : Download_file | Set pathname of cached file] ******************
ok: [master]
Sunday 19 October 2025  22:18:15 +0300 (0:00:00.061)       0:05:43.480 ******** 

TASK [download : Download_file | Create dest directory on node] ****************
ok: [master]
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.333)       0:05:43.813 ******** 
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.039)       0:05:43.853 ******** 
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.069)       0:05:43.923 ******** 

TASK [download : Download_file | Download item] ********************************
ok: [master]
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.485)       0:05:44.409 ******** 
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.037)       0:05:44.446 ******** 
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.041)       0:05:44.487 ******** 
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.038)       0:05:44.526 ******** 

TASK [download : Download_file | Extract file archives] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master
Sunday 19 October 2025  22:18:16 +0300 (0:00:00.060)       0:05:44.587 ******** 

TASK [download : Extract_file | Unpacking archive] *****************************
ok: [master]
Sunday 19 October 2025  22:18:18 +0300 (0:00:01.609)       0:05:46.196 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:18 +0300 (0:00:00.111)       0:05:46.307 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/pause"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/pause"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/pause"
}
Sunday 19 October 2025  22:18:18 +0300 (0:00:00.120)       0:05:46.427 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:18 +0300 (0:00:00.119)       0:05:46.546 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:18 +0300 (0:00:00.107)       0:05:46.654 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.111)       0:05:46.766 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.110)       0:05:46.877 ******** 
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.095)       0:05:46.972 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.106)       0:05:47.078 ******** 
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.092)       0:05:47.170 ******** 
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.088)       0:05:47.259 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.259)       0:05:47.519 ******** 
Sunday 19 October 2025  22:18:19 +0300 (0:00:00.086)       0:05:47.605 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:18:20 +0300 (0:00:00.172)       0:05:47.778 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:20 +0300 (0:00:00.701)       0:05:48.479 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:20 +0300 (0:00:00.107)       0:05:48.586 ******** 
Sunday 19 October 2025  22:18:20 +0300 (0:00:00.083)       0:05:48.670 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/pause:3.10 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/pause:3.10 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/pause:3.10 required is: True"
}
Sunday 19 October 2025  22:18:21 +0300 (0:00:00.116)       0:05:48.787 ******** 
Sunday 19 October 2025  22:18:21 +0300 (0:00:00.088)       0:05:48.876 ******** 
Sunday 19 October 2025  22:18:21 +0300 (0:00:00.088)       0:05:48.964 ******** 
Sunday 19 October 2025  22:18:21 +0300 (0:00:00.082)       0:05:49.047 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:18:23 +0300 (0:00:02.495)       0:05:51.543 ******** 
Sunday 19 October 2025  22:18:23 +0300 (0:00:00.052)       0:05:51.595 ******** 
Sunday 19 October 2025  22:18:23 +0300 (0:00:00.088)       0:05:51.684 ******** 
Sunday 19 October 2025  22:18:24 +0300 (0:00:00.086)       0:05:51.770 ******** 
Sunday 19 October 2025  22:18:24 +0300 (0:00:00.216)       0:05:51.986 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:24 +0300 (0:00:00.677)       0:05:52.664 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.117)       0:05:52.781 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/coredns/coredns"
}
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.111)       0:05:52.893 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.113)       0:05:53.007 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.107)       0:05:53.114 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.120)       0:05:53.234 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.108)       0:05:53.343 ******** 
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.087)       0:05:53.431 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.114)       0:05:53.545 ******** 
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.097)       0:05:53.643 ******** 
Sunday 19 October 2025  22:18:25 +0300 (0:00:00.094)       0:05:53.738 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:26 +0300 (0:00:00.115)       0:05:53.853 ******** 
Sunday 19 October 2025  22:18:26 +0300 (0:00:00.085)       0:05:53.938 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:18:26 +0300 (0:00:00.313)       0:05:54.252 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.558)       0:05:54.810 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.111)       0:05:54.921 ******** 
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.084)       0:05:55.006 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.12.0 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.12.0 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/coredns/coredns:v1.12.0 required is: True"
}
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.122)       0:05:55.129 ******** 
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.090)       0:05:55.220 ******** 
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.093)       0:05:55.313 ******** 
Sunday 19 October 2025  22:18:27 +0300 (0:00:00.086)       0:05:55.399 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker1]
changed: [master]
changed: [worker2]
Sunday 19 October 2025  22:18:33 +0300 (0:00:06.004)       0:06:01.404 ******** 
Sunday 19 October 2025  22:18:33 +0300 (0:00:00.057)       0:06:01.462 ******** 
Sunday 19 October 2025  22:18:33 +0300 (0:00:00.092)       0:06:01.554 ******** 
Sunday 19 October 2025  22:18:33 +0300 (0:00:00.090)       0:06:01.644 ******** 
Sunday 19 October 2025  22:18:33 +0300 (0:00:00.089)       0:06:01.733 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [worker2]
ok: [worker1]
ok: [master]
Sunday 19 October 2025  22:18:34 +0300 (0:00:00.590)       0:06:02.324 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:34 +0300 (0:00:00.119)       0:06:02.444 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/dns/k8s-dns-node-cache"
}
Sunday 19 October 2025  22:18:34 +0300 (0:00:00.268)       0:06:02.712 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.121)       0:06:02.833 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.113)       0:06:02.947 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.130)       0:06:03.077 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.123)       0:06:03.201 ******** 
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.093)       0:06:03.294 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.112)       0:06:03.406 ******** 
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.101)       0:06:03.508 ******** 
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.095)       0:06:03.603 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:35 +0300 (0:00:00.114)       0:06:03.718 ******** 
Sunday 19 October 2025  22:18:36 +0300 (0:00:00.082)       0:06:03.800 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:18:36 +0300 (0:00:00.175)       0:06:03.975 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:18:36 +0300 (0:00:00.587)       0:06:04.562 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:36 +0300 (0:00:00.112)       0:06:04.675 ******** 
Sunday 19 October 2025  22:18:37 +0300 (0:00:00.226)       0:06:04.902 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.25.0 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.25.0 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/dns/k8s-dns-node-cache:1.25.0 required is: True"
}
Sunday 19 October 2025  22:18:37 +0300 (0:00:00.116)       0:06:05.019 ******** 
Sunday 19 October 2025  22:18:37 +0300 (0:00:00.090)       0:06:05.109 ******** 
Sunday 19 October 2025  22:18:37 +0300 (0:00:00.087)       0:06:05.197 ******** 
Sunday 19 October 2025  22:18:37 +0300 (0:00:00.085)       0:06:05.283 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [worker1]
changed: [master]
Sunday 19 October 2025  22:18:44 +0300 (0:00:07.436)       0:06:12.719 ******** 
Sunday 19 October 2025  22:18:45 +0300 (0:00:00.053)       0:06:12.773 ******** 
Sunday 19 October 2025  22:18:45 +0300 (0:00:00.087)       0:06:12.861 ******** 
Sunday 19 October 2025  22:18:45 +0300 (0:00:00.091)       0:06:12.952 ******** 
Sunday 19 October 2025  22:18:45 +0300 (0:00:00.091)       0:06:13.044 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.736)       0:06:13.780 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.051)       0:06:13.832 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/cpa/cluster-proportional-autoscaler"
}
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.048)       0:06:13.881 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.057)       0:06:13.938 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.049)       0:06:13.987 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.048)       0:06:14.036 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.048)       0:06:14.084 ******** 
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.037)       0:06:14.121 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.048)       0:06:14.169 ******** 
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.042)       0:06:14.211 ******** 
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.037)       0:06:14.248 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.050)       0:06:14.299 ******** 
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.036)       0:06:14.336 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master
Sunday 19 October 2025  22:18:46 +0300 (0:00:00.203)       0:06:14.540 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [master]
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.428)       0:06:14.968 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.052)       0:06:15.021 ******** 
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.043)       0:06:15.064 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/cpa/cluster-proportional-autoscaler:v1.8.8 required is: True"
}
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.048)       0:06:15.113 ******** 
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.039)       0:06:15.152 ******** 
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.035)       0:06:15.188 ******** 
Sunday 19 October 2025  22:18:47 +0300 (0:00:00.040)       0:06:15.229 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [master]
Sunday 19 October 2025  22:18:50 +0300 (0:00:03.412)       0:06:18.642 ******** 
Sunday 19 October 2025  22:18:50 +0300 (0:00:00.054)       0:06:18.696 ******** 
Sunday 19 October 2025  22:18:50 +0300 (0:00:00.037)       0:06:18.734 ******** 
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.042)       0:06:18.776 ******** 
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.035)       0:06:18.812 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.390)       0:06:19.202 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.117)       0:06:19.320 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/kube-apiserver"
}
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.123)       0:06:19.444 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.113)       0:06:19.557 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:51 +0300 (0:00:00.122)       0:06:19.680 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.109)       0:06:19.789 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.112)       0:06:19.902 ******** 
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.087)       0:06:19.989 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.109)       0:06:20.099 ******** 
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.090)       0:06:20.190 ******** 
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.219)       0:06:20.410 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.116)       0:06:20.526 ******** 
Sunday 19 October 2025  22:18:52 +0300 (0:00:00.094)       0:06:20.621 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:18:53 +0300 (0:00:00.173)       0:06:20.794 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:18:53 +0300 (0:00:00.701)       0:06:21.495 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:18:53 +0300 (0:00:00.108)       0:06:21.604 ******** 
Sunday 19 October 2025  22:18:53 +0300 (0:00:00.094)       0:06:21.698 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.33.5 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.33.5 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/kube-apiserver:v1.33.5 required is: True"
}
Sunday 19 October 2025  22:18:54 +0300 (0:00:00.115)       0:06:21.814 ******** 
Sunday 19 October 2025  22:18:54 +0300 (0:00:00.096)       0:06:21.911 ******** 
Sunday 19 October 2025  22:18:54 +0300 (0:00:00.085)       0:06:21.996 ******** 
Sunday 19 October 2025  22:18:54 +0300 (0:00:00.086)       0:06:22.083 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:19:00 +0300 (0:00:05.765)       0:06:27.849 ******** 
Sunday 19 October 2025  22:19:00 +0300 (0:00:00.056)       0:06:27.905 ******** 
Sunday 19 October 2025  22:19:00 +0300 (0:00:00.089)       0:06:27.995 ******** 
Sunday 19 October 2025  22:19:00 +0300 (0:00:00.216)       0:06:28.211 ******** 
Sunday 19 October 2025  22:19:00 +0300 (0:00:00.083)       0:06:28.294 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.741)       0:06:29.036 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.113)       0:06:29.150 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/kube-controller-manager"
}
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.109)       0:06:29.259 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.106)       0:06:29.365 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.119)       0:06:29.485 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.109)       0:06:29.595 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:01 +0300 (0:00:00.105)       0:06:29.700 ******** 
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.083)       0:06:29.784 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.116)       0:06:29.900 ******** 
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.088)       0:06:29.988 ******** 
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.087)       0:06:30.076 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.108)       0:06:30.184 ******** 
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.091)       0:06:30.276 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:19:02 +0300 (0:00:00.312)       0:06:30.588 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:19:03 +0300 (0:00:00.935)       0:06:31.524 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:03 +0300 (0:00:00.103)       0:06:31.627 ******** 
Sunday 19 October 2025  22:19:03 +0300 (0:00:00.089)       0:06:31.717 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.33.5 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.33.5 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/kube-controller-manager:v1.33.5 required is: True"
}
Sunday 19 October 2025  22:19:04 +0300 (0:00:00.104)       0:06:31.821 ******** 
Sunday 19 October 2025  22:19:04 +0300 (0:00:00.089)       0:06:31.911 ******** 
Sunday 19 October 2025  22:19:04 +0300 (0:00:00.080)       0:06:31.992 ******** 
Sunday 19 October 2025  22:19:04 +0300 (0:00:00.089)       0:06:32.081 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:19:10 +0300 (0:00:05.867)       0:06:37.949 ******** 
Sunday 19 October 2025  22:19:10 +0300 (0:00:00.055)       0:06:38.004 ******** 
Sunday 19 October 2025  22:19:10 +0300 (0:00:00.088)       0:06:38.092 ******** 
Sunday 19 October 2025  22:19:10 +0300 (0:00:00.085)       0:06:38.178 ******** 
Sunday 19 October 2025  22:19:10 +0300 (0:00:00.088)       0:06:38.266 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:19:11 +0300 (0:00:00.900)       0:06:39.167 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:11 +0300 (0:00:00.260)       0:06:39.428 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/kube-scheduler"
}
Sunday 19 October 2025  22:19:11 +0300 (0:00:00.143)       0:06:39.572 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:11 +0300 (0:00:00.126)       0:06:39.698 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.146)       0:06:39.845 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.120)       0:06:39.966 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.130)       0:06:40.096 ******** 
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.094)       0:06:40.190 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.126)       0:06:40.317 ******** 
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.098)       0:06:40.415 ******** 
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.094)       0:06:40.509 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.110)       0:06:40.620 ******** 
Sunday 19 October 2025  22:19:12 +0300 (0:00:00.090)       0:06:40.711 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:19:13 +0300 (0:00:00.204)       0:06:40.916 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:19:14 +0300 (0:00:01.214)       0:06:42.130 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.104)       0:06:42.235 ******** 
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.086)       0:06:42.322 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.33.5 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.33.5 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/kube-scheduler:v1.33.5 required is: True"
}
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.109)       0:06:42.431 ******** 
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.092)       0:06:42.523 ******** 
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.084)       0:06:42.608 ******** 
Sunday 19 October 2025  22:19:14 +0300 (0:00:00.088)       0:06:42.696 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:19:19 +0300 (0:00:04.663)       0:06:47.360 ******** 
Sunday 19 October 2025  22:19:19 +0300 (0:00:00.053)       0:06:47.413 ******** 
Sunday 19 October 2025  22:19:19 +0300 (0:00:00.095)       0:06:47.508 ******** 
Sunday 19 October 2025  22:19:19 +0300 (0:00:00.087)       0:06:47.596 ******** 
Sunday 19 October 2025  22:19:19 +0300 (0:00:00.085)       0:06:47.681 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:19:20 +0300 (0:00:00.756)       0:06:48.438 ******** 

TASK [download : Set default values for flag variables] ************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:20 +0300 (0:00:00.109)       0:06:48.548 ******** 

TASK [download : Set_container_facts | Display the name of the image being processed] ***
ok: [master] => {
    "msg": "registry.k8s.io/kube-proxy"
}
ok: [worker1] => {
    "msg": "registry.k8s.io/kube-proxy"
}
ok: [worker2] => {
    "msg": "registry.k8s.io/kube-proxy"
}
Sunday 19 October 2025  22:19:20 +0300 (0:00:00.113)       0:06:48.661 ******** 

TASK [download : Set_container_facts | Set if containers should be pulled by digest] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.106)       0:06:48.768 ******** 

TASK [download : Set_container_facts | Define by what name to pull the image] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.263)       0:06:49.031 ******** 

TASK [download : Set_container_facts | Define file name of image] **************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.107)       0:06:49.139 ******** 

TASK [download : Set_container_facts | Define path of image] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.110)       0:06:49.249 ******** 
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.083)       0:06:49.332 ******** 

TASK [download : Set image save/load command for containerd] *******************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.116)       0:06:49.448 ******** 
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.095)       0:06:49.544 ******** 
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.087)       0:06:49.631 ******** 

TASK [download : Set image save/load command for containerd on localhost] ******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:21 +0300 (0:00:00.108)       0:06:49.739 ******** 
Sunday 19 October 2025  22:19:22 +0300 (0:00:00.090)       0:06:49.830 ******** 

TASK [download : Download_container | Prepare container download] **************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/check_pull_required.yml for master, worker1, worker2
Sunday 19 October 2025  22:19:22 +0300 (0:00:00.166)       0:06:49.996 ******** 

TASK [download : Check_pull_required |  Generate a list of information about the images on a node] ***
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:19:23 +0300 (0:00:01.104)       0:06:51.100 ******** 

TASK [download : Check_pull_required | Set pull_required if the desired image is not yet loaded] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:19:23 +0300 (0:00:00.104)       0:06:51.205 ******** 
Sunday 19 October 2025  22:19:23 +0300 (0:00:00.089)       0:06:51.295 ******** 

TASK [download : debug] ********************************************************
ok: [master] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.33.5 required is: True"
}
ok: [worker1] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.33.5 required is: True"
}
ok: [worker2] => {
    "msg": "Pull registry.k8s.io/kube-proxy:v1.33.5 required is: True"
}
Sunday 19 October 2025  22:19:23 +0300 (0:00:00.257)       0:06:51.553 ******** 
Sunday 19 October 2025  22:19:23 +0300 (0:00:00.086)       0:06:51.640 ******** 
Sunday 19 October 2025  22:19:23 +0300 (0:00:00.080)       0:06:51.720 ******** 
Sunday 19 October 2025  22:19:24 +0300 (0:00:00.086)       0:06:51.807 ******** 

TASK [download : Download_container | Download image if required] **************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:19:30 +0300 (0:00:06.439)       0:06:58.246 ******** 
Sunday 19 October 2025  22:19:30 +0300 (0:00:00.053)       0:06:58.299 ******** 
Sunday 19 October 2025  22:19:30 +0300 (0:00:00.093)       0:06:58.392 ******** 
Sunday 19 October 2025  22:19:30 +0300 (0:00:00.093)       0:06:58.486 ******** 
Sunday 19 October 2025  22:19:30 +0300 (0:00:00.087)       0:06:58.574 ******** 

TASK [download : Download_container | Remove container image from cache] *******
ok: [master]
ok: [worker2]
ok: [worker1]

PLAY [Add worker nodes to the etcd play if needed] *****************************
Sunday 19 October 2025  22:19:31 +0300 (0:00:00.860)       0:06:59.434 ******** 
[WARNING]: Could not match supplied host pattern, ignoring:
_kubespray_needs_etcd

PLAY [Install etcd] ************************************************************
Sunday 19 October 2025  22:19:31 +0300 (0:00:00.094)       0:06:59.529 ******** 

TASK [adduser : User | Create User Group] **************************************
ok: [master]
Sunday 19 October 2025  22:19:32 +0300 (0:00:00.308)       0:06:59.838 ******** 

TASK [adduser : User | Create User] ********************************************
ok: [master]
Sunday 19 October 2025  22:19:32 +0300 (0:00:00.399)       0:07:00.237 ******** 

TASK [adduser : User | Create User Group] **************************************
ok: [master]
Sunday 19 October 2025  22:19:32 +0300 (0:00:00.320)       0:07:00.557 ******** 

TASK [adduser : User | Create User] ********************************************
ok: [master]
Sunday 19 October 2025  22:19:33 +0300 (0:00:00.677)       0:07:01.235 ******** 

TASK [etcd : Check etcd certs] *************************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/check_certs.yml for master
Sunday 19 October 2025  22:19:33 +0300 (0:00:00.202)       0:07:01.437 ******** 

TASK [etcd : Check_certs | Register certs that have already been generated on first etcd node] ***
ok: [master]
Sunday 19 October 2025  22:19:34 +0300 (0:00:00.352)       0:07:01.789 ******** 

TASK [etcd : Check_certs | Set default value for 'sync_certs', 'gen_certs' and 'etcd_secret_changed' to false] ***
ok: [master]
Sunday 19 October 2025  22:19:34 +0300 (0:00:00.043)       0:07:01.833 ******** 

TASK [etcd : Check certs | Register ca and etcd admin/member certs on etcd hosts] ***
ok: [master] => (item=ca.pem)
ok: [master] => (item=member-master.pem)
ok: [master] => (item=member-master-key.pem)
ok: [master] => (item=admin-master.pem)
ok: [master] => (item=admin-master-key.pem)
Sunday 19 October 2025  22:19:35 +0300 (0:00:01.353)       0:07:03.186 ******** 

TASK [etcd : Check certs | Register ca and etcd node certs on kubernetes hosts] ***
ok: [master] => (item=ca.pem)
ok: [master] => (item=node-master.pem)
ok: [master] => (item=node-master-key.pem)
Sunday 19 October 2025  22:19:36 +0300 (0:00:01.089)       0:07:04.275 ******** 

TASK [etcd : Check_certs | Set 'gen_certs' to true if expected certificates are not on the first etcd node(1/2)] ***
ok: [master] => (item=/etc/ssl/etcd/ssl/ca.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/admin-master.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/admin-master-key.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/member-master.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/member-master-key.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/node-master.pem)
ok: [master] => (item=/etc/ssl/etcd/ssl/node-master-key.pem)
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.131)       0:07:04.406 ******** 
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.101)       0:07:04.508 ******** 

TASK [etcd : Check_certs | Set 'gen_*_certs' groups to track which nodes needs to have certs generated on first etcd node] ***
changed: [master] => (item={'node_type': 'master', 'certs': ['/etc/ssl/etcd/ssl/member-master.pem', '/etc/ssl/etcd/ssl/member-master-key.pem', '/etc/ssl/etcd/ssl/admin-master.pem', '/etc/ssl/etcd/ssl/admin-master-key.pem']})
changed: [master] => (item={'node_type': 'node', 'certs': ['/etc/ssl/etcd/ssl/node-master.pem', '/etc/ssl/etcd/ssl/node-master-key.pem']})
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.071)       0:07:04.579 ******** 
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.071)       0:07:04.650 ******** 
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.039)       0:07:04.690 ******** 

TASK [etcd : Check_certs | Set 'sync_certs' to true] ***************************
ok: [master]
Sunday 19 October 2025  22:19:36 +0300 (0:00:00.046)       0:07:04.737 ******** 

TASK [etcd : Generate etcd certs] **********************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/gen_certs_script.yml for master
Sunday 19 October 2025  22:19:37 +0300 (0:00:00.067)       0:07:04.804 ******** 

TASK [etcd : Gen_certs | create etcd cert dir] *********************************
ok: [master]
Sunday 19 October 2025  22:19:37 +0300 (0:00:00.326)       0:07:05.131 ******** 

TASK [etcd : Gen_certs | create etcd script dir (on master)] *******************
ok: [master]
Sunday 19 October 2025  22:19:37 +0300 (0:00:00.297)       0:07:05.428 ******** 

TASK [etcd : Gen_certs | write openssl config] *********************************
ok: [master]
Sunday 19 October 2025  22:19:38 +0300 (0:00:00.824)       0:07:06.253 ******** 

TASK [etcd : Gen_certs | copy certs generation script] *************************
ok: [master]
Sunday 19 October 2025  22:19:39 +0300 (0:00:00.893)       0:07:07.146 ******** 

TASK [etcd : Gen_certs | run cert generation script for etcd and kube control plane nodes] ***
changed: [master]
Sunday 19 October 2025  22:19:40 +0300 (0:00:01.177)       0:07:08.323 ******** 
Sunday 19 October 2025  22:19:40 +0300 (0:00:00.050)       0:07:08.374 ******** 
Sunday 19 October 2025  22:19:40 +0300 (0:00:00.206)       0:07:08.581 ******** 
Sunday 19 October 2025  22:19:40 +0300 (0:00:00.103)       0:07:08.684 ******** 
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.142)       0:07:08.827 ******** 
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.065)       0:07:08.893 ******** 
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.036)       0:07:08.930 ******** 
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.041)       0:07:08.972 ******** 

TASK [etcd : Gen_certs | check certificate permissions] ************************
changed: [master]
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.317)       0:07:09.289 ******** 
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.043)       0:07:09.333 ******** 

TASK [etcd : Trust etcd CA] ****************************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/upd_ca_trust.yml for master
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.065)       0:07:09.398 ******** 

TASK [etcd : Gen_certs | target ca-certificate store file] *********************
ok: [master]
Sunday 19 October 2025  22:19:41 +0300 (0:00:00.044)       0:07:09.442 ******** 

TASK [etcd : Gen_certs | add CA to trusted CA dir] *****************************
ok: [master]
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.399)       0:07:09.842 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.035)       0:07:09.877 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.035)       0:07:09.913 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.034)       0:07:09.947 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.036)       0:07:09.984 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.041)       0:07:10.025 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.036)       0:07:10.062 ******** 
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.048)       0:07:10.110 ******** 

TASK [etcdctl_etcdutl : Download etcd binary] **********************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcdctl_etcdutl/tasks/../../download/tasks/download_file.yml for master
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.061)       0:07:10.171 ******** 

TASK [etcdctl_etcdutl : Prep_download | Set a few facts] ***********************
ok: [master]
Sunday 19 October 2025  22:19:42 +0300 (0:00:00.563)       0:07:10.735 ******** 
Sunday 19 October 2025  22:19:43 +0300 (0:00:00.032)       0:07:10.768 ******** 

TASK [etcdctl_etcdutl : Download_file | Set pathname of cached file] ***********
ok: [master]
Sunday 19 October 2025  22:19:44 +0300 (0:00:01.057)       0:07:11.826 ******** 

TASK [etcdctl_etcdutl : Download_file | Create dest directory on node] *********
ok: [master]
Sunday 19 October 2025  22:19:45 +0300 (0:00:01.809)       0:07:13.635 ******** 
Sunday 19 October 2025  22:19:45 +0300 (0:00:00.035)       0:07:13.671 ******** 
Sunday 19 October 2025  22:19:45 +0300 (0:00:00.053)       0:07:13.725 ******** 

TASK [etcdctl_etcdutl : Download_file | Download item] *************************
ok: [master]
Sunday 19 October 2025  22:19:51 +0300 (0:00:05.472)       0:07:19.197 ******** 
Sunday 19 October 2025  22:19:51 +0300 (0:00:00.035)       0:07:19.233 ******** 
Sunday 19 October 2025  22:19:51 +0300 (0:00:00.039)       0:07:19.272 ******** 
Sunday 19 October 2025  22:19:51 +0300 (0:00:00.036)       0:07:19.309 ******** 

TASK [etcdctl_etcdutl : Download_file | Extract file archives] *****************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/download/tasks/extract_file.yml for master
Sunday 19 October 2025  22:19:51 +0300 (0:00:00.062)       0:07:19.371 ******** 

TASK [etcdctl_etcdutl : Extract_file | Unpacking archive] **********************
ok: [master]
Sunday 19 October 2025  22:19:57 +0300 (0:00:05.447)       0:07:24.818 ******** 

TASK [etcdctl_etcdutl : Copy etcd binary] **************************************
changed: [master]
Sunday 19 October 2025  22:20:00 +0300 (0:00:03.228)       0:07:28.047 ******** 

TASK [etcdctl_etcdutl : Copy etcdctl and etcdutl binary from download dir] *****
ok: [master] => (item=etcdctl)
ok: [master] => (item=etcdutl)
Sunday 19 October 2025  22:20:01 +0300 (0:00:01.066)       0:07:29.113 ******** 

TASK [etcdctl_etcdutl : Create etcdctl wrapper script] *************************
ok: [master]
Sunday 19 October 2025  22:20:02 +0300 (0:00:00.909)       0:07:30.023 ******** 

TASK [etcd : Install etcd] *****************************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/install_host.yml for master
Sunday 19 October 2025  22:20:02 +0300 (0:00:00.231)       0:07:30.254 ******** 

TASK [etcd : Get currently-deployed etcd version] ******************************
changed: [master]
Sunday 19 October 2025  22:20:02 +0300 (0:00:00.325)       0:07:30.580 ******** 
Sunday 19 October 2025  22:20:02 +0300 (0:00:00.062)       0:07:30.642 ******** 
Sunday 19 October 2025  22:20:02 +0300 (0:00:00.034)       0:07:30.676 ******** 

TASK [etcd : Install | Copy etcd binary from download dir] *********************
ok: [master] => (item=etcd)
Sunday 19 October 2025  22:20:03 +0300 (0:00:00.600)       0:07:31.277 ******** 

TASK [etcd : Configure etcd] ***************************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/configure.yml for master
Sunday 19 October 2025  22:20:03 +0300 (0:00:00.082)       0:07:31.359 ******** 

TASK [etcd : Configure | Check if etcd cluster is healthy] *********************
ok: [master]
Sunday 19 October 2025  22:20:09 +0300 (0:00:05.394)       0:07:36.754 ******** 
Sunday 19 October 2025  22:20:09 +0300 (0:00:00.033)       0:07:36.788 ******** 

TASK [etcd : Configure | Refresh etcd config] **********************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/refresh_config.yml for master
Sunday 19 October 2025  22:20:09 +0300 (0:00:00.058)       0:07:36.847 ******** 

TASK [etcd : Refresh config | Create etcd config file] *************************
changed: [master]
Sunday 19 October 2025  22:20:10 +0300 (0:00:01.226)       0:07:38.073 ******** 
Sunday 19 October 2025  22:20:10 +0300 (0:00:00.032)       0:07:38.106 ******** 

TASK [etcd : Configure | Copy etcd.service systemd file] ***********************
ok: [master]
Sunday 19 October 2025  22:20:11 +0300 (0:00:00.957)       0:07:39.063 ******** 
Sunday 19 October 2025  22:20:11 +0300 (0:00:00.033)       0:07:39.097 ******** 

TASK [etcd : Configure | reload systemd] ***************************************
ok: [master]
Sunday 19 October 2025  22:20:12 +0300 (0:00:00.834)       0:07:39.931 ******** 

TASK [etcd : Configure | Ensure etcd is running] *******************************
ok: [master]
Sunday 19 October 2025  22:20:12 +0300 (0:00:00.527)       0:07:40.459 ******** 
Sunday 19 October 2025  22:20:12 +0300 (0:00:00.038)       0:07:40.497 ******** 

TASK [etcd : Configure | Wait for etcd cluster to be healthy] ******************
ok: [master]
Sunday 19 October 2025  22:20:15 +0300 (0:00:02.888)       0:07:43.385 ******** 
Sunday 19 October 2025  22:20:15 +0300 (0:00:00.033)       0:07:43.418 ******** 

TASK [etcd : Configure | Check if member is in etcd cluster] *******************
ok: [master]
Sunday 19 October 2025  22:20:16 +0300 (0:00:00.429)       0:07:43.848 ******** 
Sunday 19 October 2025  22:20:16 +0300 (0:00:00.036)       0:07:43.884 ******** 
Sunday 19 October 2025  22:20:16 +0300 (0:00:00.047)       0:07:43.931 ******** 
Sunday 19 October 2025  22:20:16 +0300 (0:00:00.042)       0:07:43.973 ******** 

TASK [etcd : Refresh etcd config] **********************************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/refresh_config.yml for master
Sunday 19 October 2025  22:20:16 +0300 (0:00:00.068)       0:07:44.042 ******** 

TASK [etcd : Refresh config | Create etcd config file] *************************
changed: [master]
Sunday 19 October 2025  22:20:17 +0300 (0:00:01.252)       0:07:45.295 ******** 
Sunday 19 October 2025  22:20:17 +0300 (0:00:00.032)       0:07:45.327 ******** 
Sunday 19 October 2025  22:20:17 +0300 (0:00:00.043)       0:07:45.371 ******** 
Sunday 19 October 2025  22:20:17 +0300 (0:00:00.037)       0:07:45.409 ******** 

TASK [etcd : Refresh etcd config again for idempotency] ************************
included: /home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/etcd/tasks/refresh_config.yml for master
Sunday 19 October 2025  22:20:17 +0300 (0:00:00.074)       0:07:45.483 ******** 

TASK [etcd : Refresh config | Create etcd config file] *************************
ok: [master]
Sunday 19 October 2025  22:20:18 +0300 (0:00:01.102)       0:07:46.586 ******** 
Sunday 19 October 2025  22:20:18 +0300 (0:00:00.059)       0:07:46.646 ******** 

RUNNING HANDLER [etcd : Refresh Time Fact] *************************************
ok: [master]
Sunday 19 October 2025  22:20:20 +0300 (0:00:01.175)       0:07:47.821 ******** 

RUNNING HANDLER [etcd : Set Backup Directory] **********************************
ok: [master]
Sunday 19 October 2025  22:20:20 +0300 (0:00:00.042)       0:07:47.864 ******** 

RUNNING HANDLER [etcd : Create Backup Directory] *******************************
changed: [master]
Sunday 19 October 2025  22:20:20 +0300 (0:00:00.339)       0:07:48.204 ******** 

RUNNING HANDLER [etcd : Stat etcd v2 data directory] ***************************
ok: [master]
Sunday 19 October 2025  22:20:20 +0300 (0:00:00.345)       0:07:48.550 ******** 

RUNNING HANDLER [etcd : Backup etcd v2 data] ***********************************
changed: [master]
Sunday 19 October 2025  22:20:21 +0300 (0:00:00.344)       0:07:48.894 ******** 

RUNNING HANDLER [etcd : Backup etcd v3 data] ***********************************
changed: [master]
Sunday 19 October 2025  22:20:21 +0300 (0:00:00.418)       0:07:49.313 ******** 

RUNNING HANDLER [etcd : Restart etcd] ******************************************
changed: [master]
Sunday 19 October 2025  22:20:30 +0300 (0:00:08.441)       0:07:57.754 ******** 

RUNNING HANDLER [etcd : Wait for etcd up] **************************************
ok: [master]
Sunday 19 October 2025  22:20:30 +0300 (0:00:00.949)       0:07:58.704 ******** 
Sunday 19 October 2025  22:20:30 +0300 (0:00:00.033)       0:07:58.737 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.040)       0:07:58.778 ******** 

RUNNING HANDLER [etcd : Set etcd_secret_changed] *******************************
ok: [master]

PLAY [Install Kubernetes nodes] ************************************************
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.103)       0:07:58.882 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.092)       0:07:58.975 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.266)       0:07:59.241 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.084)       0:07:59.325 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.080)       0:07:59.406 ******** 

TASK [kubernetes/node : Set kubelet_cgroup_driver_detected fact for containerd] ***
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.112)       0:07:59.519 ******** 

TASK [kubernetes/node : Set kubelet_cgroup_driver] *****************************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.102)       0:07:59.622 ******** 
Sunday 19 October 2025  22:20:31 +0300 (0:00:00.081)       0:07:59.703 ******** 
Sunday 19 October 2025  22:20:32 +0300 (0:00:00.077)       0:07:59.781 ******** 

TASK [kubernetes/node : Os specific vars] **************************************
ok: [master] => (item=/home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml)
ok: [worker1] => (item=/home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml)
ok: [worker2] => (item=/home/vboxuser/git/diplom/diplom-kubespray/kubespray/roles/kubernetes/node/vars/ubuntu-22.yml)
Sunday 19 October 2025  22:20:32 +0300 (0:00:00.123)       0:07:59.905 ******** 

TASK [kubernetes/node : Ensure /var/lib/cni exists] ****************************
changed: [master]
changed: [worker2]
changed: [worker1]
Sunday 19 October 2025  22:20:32 +0300 (0:00:00.488)       0:08:00.394 ******** 

TASK [kubernetes/node : Install | Copy kubeadm binary from download dir] *******
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:20:34 +0300 (0:00:01.896)       0:08:02.290 ******** 

TASK [kubernetes/node : Install | Copy kubelet binary from download dir] *******
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:20:36 +0300 (0:00:01.947)       0:08:04.238 ******** 
Sunday 19 October 2025  22:20:36 +0300 (0:00:00.085)       0:08:04.324 ******** 
Sunday 19 October 2025  22:20:36 +0300 (0:00:00.086)       0:08:04.410 ******** 
Sunday 19 October 2025  22:20:36 +0300 (0:00:00.088)       0:08:04.498 ******** 
Sunday 19 October 2025  22:20:36 +0300 (0:00:00.082)       0:08:04.581 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.240)       0:08:04.821 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.088)       0:08:04.910 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.093)       0:08:05.003 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.092)       0:08:05.096 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.096)       0:08:05.193 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.094)       0:08:05.287 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.094)       0:08:05.382 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.091)       0:08:05.474 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.092)       0:08:05.567 ******** 
Sunday 19 October 2025  22:20:37 +0300 (0:00:00.106)       0:08:05.673 ******** 
Sunday 19 October 2025  22:20:38 +0300 (0:00:00.100)       0:08:05.774 ******** 
Sunday 19 October 2025  22:20:38 +0300 (0:00:00.093)       0:08:05.867 ******** 

TASK [kubernetes/node : Ensure nodePort range is reserved] *********************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:20:38 +0300 (0:00:00.799)       0:08:06.667 ******** 

TASK [kubernetes/node : Verify if br_netfilter module exists] ******************
ok: [worker2]
ok: [worker1]
ok: [master]
Sunday 19 October 2025  22:20:39 +0300 (0:00:00.559)       0:08:07.227 ******** 

TASK [kubernetes/node : Verify br_netfilter module path exists] ****************
ok: [master] => (item=/etc/modules-load.d)
ok: [worker2] => (item=/etc/modules-load.d)
ok: [master] => (item=/etc/modprobe.d)
ok: [worker2] => (item=/etc/modprobe.d)
ok: [worker1] => (item=/etc/modules-load.d)
ok: [worker1] => (item=/etc/modprobe.d)
Sunday 19 October 2025  22:20:41 +0300 (0:00:01.858)       0:08:09.085 ******** 

TASK [kubernetes/node : Enable br_netfilter module] ****************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:20:41 +0300 (0:00:00.522)       0:08:09.608 ******** 

TASK [kubernetes/node : Persist br_netfilter module] ***************************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:20:43 +0300 (0:00:01.412)       0:08:11.020 ******** 

TASK [kubernetes/node : Check if bridge-nf-call-iptables key exists] ***********
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:20:43 +0300 (0:00:00.537)       0:08:11.557 ******** 

TASK [kubernetes/node : Enable bridge-nf-call tables] **************************
ok: [master] => (item=net.bridge.bridge-nf-call-iptables)
ok: [worker2] => (item=net.bridge.bridge-nf-call-iptables)
ok: [worker1] => (item=net.bridge.bridge-nf-call-iptables)
ok: [worker2] => (item=net.bridge.bridge-nf-call-arptables)
ok: [master] => (item=net.bridge.bridge-nf-call-arptables)
ok: [worker2] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [master] => (item=net.bridge.bridge-nf-call-ip6tables)
ok: [worker1] => (item=net.bridge.bridge-nf-call-arptables)
ok: [worker1] => (item=net.bridge.bridge-nf-call-ip6tables)
Sunday 19 October 2025  22:20:45 +0300 (0:00:01.651)       0:08:13.209 ******** 

TASK [kubernetes/node : Modprobe Kernel Module for IPVS] ***********************
ok: [master] => (item=ip_vs)
ok: [worker2] => (item=ip_vs)
ok: [master] => (item=ip_vs_rr)
ok: [worker2] => (item=ip_vs_rr)
ok: [worker1] => (item=ip_vs)
ok: [worker2] => (item=ip_vs_wrr)
ok: [master] => (item=ip_vs_wrr)
ok: [worker2] => (item=ip_vs_sh)
ok: [master] => (item=ip_vs_sh)
ok: [worker1] => (item=ip_vs_rr)
ok: [worker2] => (item=ip_vs_wlc)
ok: [master] => (item=ip_vs_wlc)
ok: [worker2] => (item=ip_vs_lc)
ok: [master] => (item=ip_vs_lc)
ok: [worker1] => (item=ip_vs_wrr)
ok: [worker1] => (item=ip_vs_sh)
ok: [worker1] => (item=ip_vs_wlc)
ok: [worker1] => (item=ip_vs_lc)
Sunday 19 October 2025  22:20:48 +0300 (0:00:03.480)       0:08:16.689 ******** 

TASK [kubernetes/node : Modprobe conntrack module] *****************************
ok: [master] => (item=nf_conntrack)
ok: [worker2] => (item=nf_conntrack)
ok: [worker1] => (item=nf_conntrack)
Sunday 19 October 2025  22:20:49 +0300 (0:00:00.547)       0:08:17.236 ******** 
Sunday 19 October 2025  22:20:49 +0300 (0:00:00.086)       0:08:17.323 ******** 

TASK [kubernetes/node : Set kubelet api version to v1beta1] ********************
ok: [master]
ok: [worker1]
ok: [worker2]
Sunday 19 October 2025  22:20:49 +0300 (0:00:00.106)       0:08:17.430 ******** 

TASK [kubernetes/node : Write kubelet environment config file (kubeadm)] *******
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:20:52 +0300 (0:00:02.548)       0:08:19.978 ******** 

TASK [kubernetes/node : Write kubelet config file] *****************************
changed: [worker2]
changed: [worker1]
changed: [master]
Sunday 19 October 2025  22:20:53 +0300 (0:00:01.574)       0:08:21.553 ******** 

TASK [kubernetes/node : Write kubelet systemd init file] ***********************
ok: [master]
ok: [worker2]
ok: [worker1]
Sunday 19 October 2025  22:20:55 +0300 (0:00:01.441)       0:08:22.994 ******** 
Sunday 19 October 2025  22:20:55 +0300 (0:00:00.011)       0:08:23.005 ******** 
Sunday 19 October 2025  22:20:55 +0300 (0:00:00.011)       0:08:23.017 ******** 
Sunday 19 October 2025  22:20:55 +0300 (0:00:00.013)       0:08:23.030 ******** 

RUNNING HANDLER [kubernetes/node : Kubelet | reload systemd] *******************
ok: [worker2]
ok: [master]
ok: [worker1]
Sunday 19 October 2025  22:20:56 +0300 (0:00:01.577)       0:08:24.608 ******** 

RUNNING HANDLER [kubernetes/node : Kubelet | restart kubelet] ******************
changed: [worker2]
changed: [master]
changed: [worker1]
Sunday 19 October 2025  22:20:57 +0300 (0:00:00.876)       0:08:25.484 ******** 

TASK [kubernetes/node : Enable kubelet] ****************************************
ok: [worker2]
ok: [master]
ok: [worker1]

PLAY [Install the control plane] ***********************************************
Sunday 19 October 2025  22:20:58 +0300 (0:00:01.195)       0:08:26.679 ******** 
Sunday 19 October 2025  22:20:58 +0300 (0:00:00.033)       0:08:26.713 ******** 
Sunday 19 October 2025  22:20:59 +0300 (0:00:00.043)       0:08:26.756 ******** 
Sunday 19 October 2025  22:20:59 +0300 (0:00:00.041)       0:08:26.798 ******** 
Sunday 19 October 2025  22:20:59 +0300 (0:00:00.071)       0:08:26.869 ******** 

TASK [kubernetes/control-plane : Pre-upgrade | Delete control plane manifests if etcd secrets changed] ***
ok: [master] => (item=kube-apiserver)
ok: [master] => (item=kube-controller-manager)
ok: [master] => (item=kube-scheduler)
Sunday 19 October 2025  22:21:00 +0300 (0:00:01.080)       0:08:27.950 ******** 
Sunday 19 October 2025  22:21:00 +0300 (0:00:00.041)       0:08:27.992 ******** 
Sunday 19 October 2025  22:21:00 +0300 (0:00:00.037)       0:08:28.030 ******** 
Sunday 19 October 2025  22:21:00 +0300 (0:00:00.040)       0:08:28.070 ******** 
Sunday 19 October 2025  22:21:00 +0300 (0:00:00.036)       0:08:28.106 ******** 

TASK [kubernetes/control-plane : Create kube-scheduler config] *****************
changed: [master]
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.816)       0:08:28.923 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.032)       0:08:28.955 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.037)       0:08:28.993 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.036)       0:08:29.029 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.032)       0:08:29.061 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.058)       0:08:29.120 ******** 
Sunday 19 October 2025  22:21:01 +0300 (0:00:00.036)       0:08:29.156 ******** 

TASK [kubernetes/control-plane : Install | Copy kubectl binary from download dir] ***
ok: [master]
Sunday 19 October 2025  22:21:02 +0300 (0:00:01.255)       0:08:30.412 ******** 

TASK [kubernetes/control-plane : Install kubectl bash completion] **************
changed: [master]
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.389)       0:08:30.801 ******** 

TASK [kubernetes/control-plane : Set kubectl bash completion file permissions] ***
ok: [master]
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.309)       0:08:31.110 ******** 
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.043)       0:08:31.154 ******** 

TASK [kubernetes/control-plane : Check which kube-control nodes are already members of the cluster] ***
ok: [master]
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.382)       0:08:31.537 ******** 
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.058)       0:08:31.595 ******** 

TASK [kubernetes/control-plane : Set fact first_kube_control_plane] ************
ok: [master]
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.044)       0:08:31.640 ******** 
Sunday 19 October 2025  22:21:03 +0300 (0:00:00.034)       0:08:31.675 ******** 

TASK [kubernetes/control-plane : Kubeadm | Check if kubeadm has already run] ***
ok: [master]
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.325)       0:08:32.001 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.053)       0:08:32.054 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.049)       0:08:32.103 ******** 

TASK [kubernetes/control-plane : Kubeadm | aggregate all SANs] *****************
ok: [master]
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.196)       0:08:32.299 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.032)       0:08:32.332 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.037)       0:08:32.369 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.035)       0:08:32.405 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.041)       0:08:32.446 ******** 
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.039)       0:08:32.485 ******** 

TASK [kubernetes/control-plane : Set kubeadm_config_api_fqdn define] ***********
ok: [master]
Sunday 19 October 2025  22:21:04 +0300 (0:00:00.051)       0:08:32.536 ******** 

TASK [kubernetes/control-plane : Kubeadm | Create kubeadm config] **************
changed: [master]
Sunday 19 October 2025  22:21:05 +0300 (0:00:01.128)       0:08:33.665 ******** 
Sunday 19 October 2025  22:21:05 +0300 (0:00:00.035)       0:08:33.700 ******** 
Sunday 19 October 2025  22:21:05 +0300 (0:00:00.035)       0:08:33.735 ******** 
Sunday 19 October 2025  22:21:06 +0300 (0:00:00.032)       0:08:33.768 ******** 
Sunday 19 October 2025  22:21:06 +0300 (0:00:00.109)       0:08:33.877 ******** 
Sunday 19 October 2025  22:21:06 +0300 (0:00:00.118)       0:08:33.996 ******** 
Sunday 19 October 2025  22:21:06 +0300 (0:00:00.038)       0:08:34.034 ******** 
Sunday 19 October 2025  22:21:06 +0300 (0:00:00.035)       0:08:34.070 ******** 

TASK [kubernetes/control-plane : Kubeadm | Initialize first control plane node (1st try)] ***
fatal: [master]: FAILED! => {"changed": true, "cmd": ["timeout", "-k", "300s", "300s", "/usr/local/bin/kubeadm", "init", "--config=/etc/kubernetes/kubeadm-config.yaml", "--ignore-preflight-errors=", "--skip-phases=addon/coredns", "--upload-certs"], "delta": "0:04:05.648887", "end": "2025-10-19 19:25:12.295133", "failed_when_result": true, "msg": "non-zero return code", "rc": 1, "start": "2025-10-19 19:21:06.646246", "stderr": "W1019 19:21:06.694134   27391 initconfiguration.go:362] [config] WARNING: Ignored configuration document with GroupVersionKind kubeadm.k8s.io/v1beta4, Kind=UpgradeConfiguration\nW1019 19:21:06.696402   27391 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]\nerror execution phase wait-control-plane: failed while waiting for the control plane to start: kube-apiserver check failed at https://10.10.0.9:6443/livez: Get \"https://lb-apiserver.kubernetes.local:6443/livez?timeout=10s\": dial tcp: lookup lb-apiserver.kubernetes.local on 127.0.0.53:53: server misbehaving\nTo see the stack trace of this error execute with --v=5 or higher", "stderr_lines": ["W1019 19:21:06.694134   27391 initconfiguration.go:362] [config] WARNING: Ignored configuration document with GroupVersionKind kubeadm.k8s.io/v1beta4, Kind=UpgradeConfiguration", "W1019 19:21:06.696402   27391 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "error execution phase wait-control-plane: failed while waiting for the control plane to start: kube-apiserver check failed at https://10.10.0.9:6443/livez: Get \"https://lb-apiserver.kubernetes.local:6443/livez?timeout=10s\": dial tcp: lookup lb-apiserver.kubernetes.local on 127.0.0.53:53: server misbehaving", "To see the stack trace of this error execute with --v=5 or higher"], "stdout": "[init] Using Kubernetes version: v1.33.5\n[preflight] Running pre-flight checks\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action beforehand using 'kubeadm config images pull'\n[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"\n[certs] Generating \"ca\" certificate and key\n[certs] Generating \"apiserver\" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local lb-apiserver.kubernetes.local localhost master master.ru-central1.internal] and IPs [10.233.0.1 10.10.0.9 127.0.0.1 ::1 84.201.134.219]\n[certs] Generating \"apiserver-kubelet-client\" certificate and key\n[certs] Generating \"front-proxy-ca\" certificate and key\n[certs] Generating \"front-proxy-client\" certificate and key\n[certs] External etcd mode: Skipping etcd/ca certificate authority generation\n[certs] External etcd mode: Skipping etcd/server certificate generation\n[certs] External etcd mode: Skipping etcd/peer certificate generation\n[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation\n[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation\n[certs] Generating \"sa\" key and public key\n[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"\n[kubeconfig] Writing \"admin.conf\" kubeconfig file\n[kubeconfig] Writing \"super-admin.conf\" kubeconfig file\n[kubeconfig] Writing \"kubelet.conf\" kubeconfig file\n[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file\n[kubeconfig] Writing \"scheduler.conf\" kubeconfig file\n[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"\n[control-plane] Creating static Pod manifest for \"kube-apiserver\"\n[control-plane] Creating static Pod manifest for \"kube-controller-manager\"\n[control-plane] Creating static Pod manifest for \"kube-scheduler\"\n[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\n[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\n[kubelet-start] Starting the kubelet\n[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\"\n[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s\n[kubelet-check] The kubelet is healthy after 1.001760373s\n[control-plane-check] Waiting for healthy control plane components. This can take up to 4m0s\n[control-plane-check] Checking kube-apiserver at https://10.10.0.9:6443/livez\n[control-plane-check] Checking kube-controller-manager at https://[::]:10257/healthz\n[control-plane-check] Checking kube-scheduler at https://[::]:10259/livez\n[control-plane-check] kube-controller-manager is healthy after 7.151112118s\n[control-plane-check] kube-scheduler is healthy after 10.041910314s\n[control-plane-check] kube-apiserver is not healthy after 4m0.000981608s\n\nA control plane component may have crashed or exited when started by the container runtime.\nTo troubleshoot, list all containers using your preferred container runtimes CLI.\nHere is one example how you may list all running Kubernetes containers by using crictl:\n\t- 'crictl --runtime-endpoint unix:///var/run/containerd/containerd.sock ps -a | grep kube | grep -v pause'\n\tOnce you have found the failing container, you can inspect its logs with:\n\t- 'crictl --runtime-endpoint unix:///var/run/containerd/containerd.sock logs CONTAINERID'", "stdout_lines": ["[init] Using Kubernetes version: v1.33.5", "[preflight] Running pre-flight checks", "[preflight] Pulling images required for setting up a Kubernetes cluster", "[preflight] This might take a minute or two, depending on the speed of your internet connection", "[preflight] You can also perform this action beforehand using 'kubeadm config images pull'", "[certs] Using certificateDir folder \"/etc/kubernetes/ssl\"", "[certs] Generating \"ca\" certificate and key", "[certs] Generating \"apiserver\" certificate and key", "[certs] apiserver serving cert is signed for DNS names [kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local lb-apiserver.kubernetes.local localhost master master.ru-central1.internal] and IPs [10.233.0.1 10.10.0.9 127.0.0.1 ::1 84.201.134.219]", "[certs] Generating \"apiserver-kubelet-client\" certificate and key", "[certs] Generating \"front-proxy-ca\" certificate and key", "[certs] Generating \"front-proxy-client\" certificate and key", "[certs] External etcd mode: Skipping etcd/ca certificate authority generation", "[certs] External etcd mode: Skipping etcd/server certificate generation", "[certs] External etcd mode: Skipping etcd/peer certificate generation", "[certs] External etcd mode: Skipping etcd/healthcheck-client certificate generation", "[certs] External etcd mode: Skipping apiserver-etcd-client certificate generation", "[certs] Generating \"sa\" key and public key", "[kubeconfig] Using kubeconfig folder \"/etc/kubernetes\"", "[kubeconfig] Writing \"admin.conf\" kubeconfig file", "[kubeconfig] Writing \"super-admin.conf\" kubeconfig file", "[kubeconfig] Writing \"kubelet.conf\" kubeconfig file", "[kubeconfig] Writing \"controller-manager.conf\" kubeconfig file", "[kubeconfig] Writing \"scheduler.conf\" kubeconfig file", "[control-plane] Using manifest folder \"/etc/kubernetes/manifests\"", "[control-plane] Creating static Pod manifest for \"kube-apiserver\"", "[control-plane] Creating static Pod manifest for \"kube-controller-manager\"", "[control-plane] Creating static Pod manifest for \"kube-scheduler\"", "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"", "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"", "[kubelet-start] Starting the kubelet", "[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory \"/etc/kubernetes/manifests\"", "[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s", "[kubelet-check] The kubelet is healthy after 1.001760373s", "[control-plane-check] Waiting for healthy control plane components. This can take up to 4m0s", "[control-plane-check] Checking kube-apiserver at https://10.10.0.9:6443/livez", "[control-plane-check] Checking kube-controller-manager at https://[::]:10257/healthz", "[control-plane-check] Checking kube-scheduler at https://[::]:10259/livez", "[control-plane-check] kube-controller-manager is healthy after 7.151112118s", "[control-plane-check] kube-scheduler is healthy after 10.041910314s", "[control-plane-check] kube-apiserver is not healthy after 4m0.000981608s", "", "A control plane component may have crashed or exited when started by the container runtime.", "To troubleshoot, list all containers using your preferred container runtimes CLI.", "Here is one example how you may list all running Kubernetes containers by using crictl:", "\t- 'crictl --runtime-endpoint unix:///var/run/containerd/containerd.sock ps -a | grep kube | grep -v pause'", "\tOnce you have found the failing container, you can inspect its logs with:", "\t- 'crictl --runtime-endpoint unix:///var/run/containerd/containerd.sock logs CONTAINERID'"]}
Sunday 19 October 2025  22:25:12 +0300 (0:04:05.993)       0:12:40.063 ******** 
FAILED - RETRYING: [master]: Kubeadm | Initialize first control plane node (retry) (2 retries left).
FAILED - RETRYING: [master]: Kubeadm | Initialize first control plane node (retry) (1 retries left).

TASK [kubernetes/control-plane : Kubeadm | Initialize first control plane node (retry)] ***
fatal: [master]: FAILED! => {"attempts": 2, "changed": true, "cmd": ["timeout", "-k", "300s", "300s", "/usr/local/bin/kubeadm", "init", "--config=/etc/kubernetes/kubeadm-config.yaml", "--ignore-preflight-errors=", "--skip-phases=addon/coredns", "--upload-certs"], "delta": "0:00:00.192741", "end": "2025-10-19 19:25:33.819915", "failed_when_result": true, "msg": "non-zero return code", "rc": 1, "start": "2025-10-19 19:25:33.627174", "stderr": "W1019 19:25:33.678306   27779 initconfiguration.go:362] [config] WARNING: Ignored configuration document with GroupVersionKind kubeadm.k8s.io/v1beta4, Kind=UpgradeConfiguration\nW1019 19:25:33.680505   27779 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]\nerror execution phase preflight: [preflight] Some fatal errors occurred:\n\t[ERROR Port-6443]: Port 6443 is in use\n\t[ERROR Port-10259]: Port 10259 is in use\n\t[ERROR Port-10257]: Port 10257 is in use\n\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml]: /etc/kubernetes/manifests/kube-apiserver.yaml already exists\n\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml]: /etc/kubernetes/manifests/kube-controller-manager.yaml already exists\n\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml]: /etc/kubernetes/manifests/kube-scheduler.yaml already exists\n\t[ERROR Port-10250]: Port 10250 is in use\n[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`\nTo see the stack trace of this error execute with --v=5 or higher", "stderr_lines": ["W1019 19:25:33.678306   27779 initconfiguration.go:362] [config] WARNING: Ignored configuration document with GroupVersionKind kubeadm.k8s.io/v1beta4, Kind=UpgradeConfiguration", "W1019 19:25:33.680505   27779 utils.go:69] The recommended value for \"clusterDNS\" in \"KubeletConfiguration\" is: [10.233.0.10]; the provided value is: [169.254.25.10]", "error execution phase preflight: [preflight] Some fatal errors occurred:", "\t[ERROR Port-6443]: Port 6443 is in use", "\t[ERROR Port-10259]: Port 10259 is in use", "\t[ERROR Port-10257]: Port 10257 is in use", "\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml]: /etc/kubernetes/manifests/kube-apiserver.yaml already exists", "\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml]: /etc/kubernetes/manifests/kube-controller-manager.yaml already exists", "\t[ERROR FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml]: /etc/kubernetes/manifests/kube-scheduler.yaml already exists", "\t[ERROR Port-10250]: Port 10250 is in use", "[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`", "To see the stack trace of this error execute with --v=5 or higher"], "stdout": "[init] Using Kubernetes version: v1.33.5\n[preflight] Running pre-flight checks", "stdout_lines": ["[init] Using Kubernetes version: v1.33.5", "[preflight] Running pre-flight checks"]}

PLAY RECAP *********************************************************************
master                     : ok=495  changed=44   unreachable=0    failed=1    skipped=568  rescued=1    ignored=0   
worker1                    : ok=359  changed=26   unreachable=0    failed=0    skipped=402  rescued=0    ignored=0   
worker2                    : ok=359  changed=26   unreachable=0    failed=0    skipped=402  rescued=0    ignored=0   

Sunday 19 October 2025  22:25:33 +0300 (0:00:21.504)       0:13:01.567 ******** 
=============================================================================== 
kubernetes/control-plane : Kubeadm | Initialize first control plane node (1st try) - 245.99s
download : Download_container | Download image if required ------------- 33.13s
kubernetes/control-plane : Kubeadm | Initialize first control plane node (retry) -- 21.50s
download : Download_container | Download image if required ------------- 10.32s
container-engine/validate-container-engine : Populate service facts ---- 10.15s
container-engine/containerd : Containerd | Unpack containerd archive ---- 9.53s
download : Download_container | Download image if required -------------- 9.44s
container-engine/crictl : Extract_file | Unpacking archive -------------- 8.84s
container-engine/nerdctl : Extract_file | Unpacking archive ------------- 8.79s
etcd : Restart etcd ----------------------------------------------------- 8.44s
container-engine/runc : Download_file | Download item ------------------- 7.44s
download : Download_container | Download image if required -------------- 7.44s
container-engine/nerdctl : Download_file | Download item ---------------- 7.42s
container-engine/containerd : Download_file | Download item ------------- 7.16s
container-engine/crictl : Download_file | Download item ----------------- 6.88s
download : Download_file | Download item -------------------------------- 6.57s
download : Download_container | Download image if required -------------- 6.44s
download : Download_container | Download image if required -------------- 6.00s
download : Download_container | Download image if required -------------- 5.87s
download : Download_container | Download image if required -------------- 5.77s
master_pub_ip = 84.201.134.219
etcd.yml created at inventory/mycluster/group_vars/etcd.yml
>>> Running Ansible playbooks...
Traceback (most recent call last):
  File "/home/vboxuser/git/diplom/diplom-kubespray/kubespray/generate_inventory.py", line 178, in <module>
    subprocess.run(["ansible-playbook", "-i", output_path, "playbooks/cluster.yml"], check=True)
  File "/usr/lib/python3.10/subprocess.py", line 526, in run
    raise CalledProcessError(retcode, process.args,
subprocess.CalledProcessError: Command '['ansible-playbook', '-i', 'inventory/mycluster/hosts.yaml', 'playbooks/cluster.yml']' returned non-zero exit status 2.
